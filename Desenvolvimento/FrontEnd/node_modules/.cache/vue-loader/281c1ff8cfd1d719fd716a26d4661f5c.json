{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/Home.vue?vue&type=template&id=5697e50c&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/Home.vue","mtime":1543515300282},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\n        \"section\",\n        { staticClass: \"welcome-section d-flex align-items-center\" },\n        [\n          _c(\"b-container\", { staticClass: \"text-center text-dark\" }, [\n            _c(\"h1\", { staticClass: \"inicio\" }, [\n              _vm._v(\"Bem-vindo ao Match de Currículos\")\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\"b-container\", { staticClass: \"p-3\" }, [\n        _c(\n          \"section\",\n          { staticClass: \"p-3\" },\n          [\n            _c(\n              \"b-row\",\n              { staticClass: \"text-center\" },\n              [\n                _c(\n                  \"b-col\",\n                  { staticClass: \"mt-3\" },\n                  [\n                    _c(\n                      \"b-btn\",\n                      {\n                        attrs: { variant: \"outline-dark\", size: \"lg\" },\n                        on: { click: _vm.showModalCompany }\n                      },\n                      [\n                        _vm._v(\n                          \" \\n                        Cadastrar empresa \\n                    \"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"b-col\",\n                  { staticClass: \"mt-3\" },\n                  [\n                    _c(\n                      \"b-btn\",\n                      {\n                        attrs: { variant: \"outline-dark\", size: \"lg\" },\n                        on: { click: _vm.showModalPerson }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n                        Cadastrar pessoa\\n                    \"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"modalRegCompany\",\n          staticClass: \"text-dark w-50 float-left\",\n          attrs: {\n            \"hide-footer\": \"\",\n            centered: true,\n            title: \"Cadastro de Empresas\",\n            size: \"lg\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"modal-body\" },\n            [\n              _c(\n                \"b-form\",\n                {\n                  attrs: { id: \"companyForm\" },\n                  on: { submit: _vm.redirectRegCompany }\n                },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Nome *\", \"label-for\": \"companyName\" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"companyName\",\n                          type: \"text\",\n                          state: !_vm.$v.formCompany.name.$invalid,\n                          \"aria-describedby\": \"inputCompanyNameFeedback\",\n                          placeholder: \"Digite o nome da empresa...\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.formCompany.name,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formCompany,\n                              \"name\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formCompany.name\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputCompanyNameFeedback\" } },\n                        [\n                          !_vm.$v.formCompany.name.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formCompany.name.maxLength\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            O nome pode ter no máximo tamanho 50.\\n                        \"\n                                  )\n                                ])\n                              : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: { label: \"E-mail *\", \"label-for\": \"companyEmail\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"email\",\n                          value: _vm.formCompany.email,\n                          state: !_vm.$v.formCompany.email.$invalid,\n                          \"aria-describedby\": \"inputCompanyEmailFeedback\",\n                          placeholder: \"nome@dominio.com\",\n                          required: \"\"\n                        },\n                        nativeOn: {\n                          change: function($event) {\n                            _vm.formCompany.email = $event.target.value\n                          }\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputCompanyEmailFeedback\" } },\n                        [\n                          !_vm.$v.formCompany.email.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formCompany.email.email\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            Digite um e-mail válido.\\n                        \"\n                                  )\n                                ])\n                              : !_vm.$v.formCompany.email.maxLength\n                                ? _c(\"p\", [\n                                    _vm._v(\n                                      \"\\n                            O e-mail pode ter no máximo tamanho 50.\\n                        \"\n                                    )\n                                  ])\n                                : !_vm.$v.formCompany.email.isUnique\n                                  ? _c(\"p\", [\n                                      _vm._v(\n                                        \"\\n                            Esse e-mail já é utilizado.\\n                        \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: { label: \"CNPJ *\", \"label-for\": \"companyIdentity\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"text\",\n                          id: \"companyIdentity\",\n                          state: !_vm.$v.formCompany.identity.$invalid,\n                          \"aria-describedby\": \"inputCompanyIdentityFeedback\",\n                          placeholder: \"XX.XXX.XXX/XXXX-XX\"\n                        },\n                        model: {\n                          value: _vm.formCompany.identity,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formCompany,\n                              \"identity\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formCompany.identity\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputCompanyIdentityFeedback\" } },\n                        [\n                          !_vm.$v.formCompany.identity.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formCompany.identity.isValid\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            O CNPJ informado não é válido.\\n                        \"\n                                  )\n                                ])\n                              : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Senha *\",\n                        \"label-for\": \"companyPassword\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"password\",\n                          id: \"companyPassword\",\n                          state: !_vm.$v.formCompany.password.$invalid,\n                          \"aria-describedby\": \"inputCompanyPasswordFeedback\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.formCompany.password,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formCompany,\n                              \"password\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formCompany.password\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputCompanyPasswordFeedback\" } },\n                        [\n                          !_vm.$v.formCompany.password.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formCompany.password.minLength\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            A senha deve possuir no mínimo tamanho 5.\\n                        \"\n                                  )\n                                ])\n                              : !_vm.$v.formCompany.password.isValid\n                                ? _c(\"p\", [\n                                    _vm._v(\n                                      \"\\n                            A senha deve possuir no mínimo uma letra maiúscula, uma letra minúscula e um número.\\n                        \"\n                                    )\n                                  ])\n                                : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-footer\" },\n                    [\n                      _c(\n                        \"b-btn\",\n                        {\n                          attrs: { variant: \"outline-danger\" },\n                          on: { click: _vm.hideModalCompany }\n                        },\n                        [_vm._v(\"Fechar\")]\n                      ),\n                      _c(\n                        \"b-btn\",\n                        {\n                          attrs: {\n                            disabled: _vm.$v.formCompany.$invalid,\n                            variant: \"outline-success\",\n                            type: \"submit\"\n                          }\n                        },\n                        [_vm._v(\"Enviar\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"modalRegPerson\",\n          staticClass: \"text-dark w-50 float-left\",\n          attrs: {\n            \"hide-footer\": \"\",\n            centered: true,\n            title: \"Cadastro de Pessoas\",\n            size: \"lg\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"modal-body\" },\n            [\n              _c(\n                \"b-form\",\n                {\n                  attrs: { id: \"personForm\" },\n                  on: { submit: _vm.redirectRegPerson }\n                },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Nome *\", \"label-for\": \"personName\" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"personName\",\n                          type: \"text\",\n                          state: !_vm.$v.formPerson.name.$invalid,\n                          \"aria-describedby\": \"inputPersonNameFeedback\",\n                          placeholder: \"Digite o seu nome...\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.formPerson.name,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formPerson,\n                              \"name\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formPerson.name\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputCompanyNameFeedback\" } },\n                        [\n                          !_vm.$v.formCompany.name.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formCompany.name.maxLength\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            O nome pode ter no máximo tamanho 50.\\n                        \"\n                                  )\n                                ])\n                              : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: { label: \"E-mail *\", \"label-for\": \"personEmail\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        ref: \"personEmail\",\n                        attrs: {\n                          type: \"email\",\n                          value: _vm.formPerson.email,\n                          state: !_vm.$v.formPerson.email.$invalid,\n                          \"aria-describedby\": \"inputPersonEmailFeedback\",\n                          placeholder: \"nome@dominio.com\",\n                          required: \"\"\n                        },\n                        nativeOn: {\n                          change: function($event) {\n                            _vm.formPerson.email = $event.target.value\n                          }\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputPersonEmailFeedback\" } },\n                        [\n                          !_vm.$v.formPerson.email.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formPerson.email.email\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            Digite um e-mail válido.\\n                        \"\n                                  )\n                                ])\n                              : !_vm.$v.formPerson.email.maxLength\n                                ? _c(\"p\", [\n                                    _vm._v(\n                                      \"\\n                            O e-mail pode ter no máximo tamanho 50.\\n                        \"\n                                    )\n                                  ])\n                                : !_vm.$v.formPerson.email.isUnique\n                                  ? _c(\"p\", [\n                                      _vm._v(\n                                        \"\\n                            Esse e-mail já é utilizado.\\n                        \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: { label: \"CPF *\", \"label-for\": \"personIdentity\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"text\",\n                          id: \"personIdentity\",\n                          state: !_vm.$v.formPerson.identity.$invalid,\n                          \"aria-describedby\": \"inputPersonIdentityFeedback\",\n                          placeholder: \"XXX.XXX.XXX-XX\"\n                        },\n                        model: {\n                          value: _vm.formPerson.identity,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formPerson,\n                              \"identity\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formPerson.identity\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputPersonIdentityFeedback\" } },\n                        [\n                          !_vm.$v.formPerson.identity.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formPerson.identity.isValid\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            O CPF informado não é válido.\\n                        \"\n                                  )\n                                ])\n                              : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: { label: \"Senha *\", \"label-for\": \"personPassword\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          type: \"password\",\n                          id: \"personPassword\",\n                          state: !_vm.$v.formPerson.password.$invalid,\n                          \"aria-describedby\": \"inputPersonPasswordFeedback\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.formPerson.password,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.formPerson,\n                              \"password\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"formPerson.password\"\n                        }\n                      }),\n                      _c(\n                        \"b-form-invalid-feedback\",\n                        { attrs: { id: \"inputPersonPasswordFeedback\" } },\n                        [\n                          !_vm.$v.formPerson.password.required\n                            ? _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            Preencha este campo.\\n                        \"\n                                )\n                              ])\n                            : !_vm.$v.formPerson.password.minLength\n                              ? _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n                            A senha deve possuir no mínimo tamanho 5.\\n                        \"\n                                  )\n                                ])\n                              : !_vm.$v.formPerson.password.isValid\n                                ? _c(\"p\", [\n                                    _vm._v(\n                                      \"\\n                            A senha deve possuir no mínimo uma letra maiúscula, uma letra minúscula e um número.\\n                        \"\n                                    )\n                                  ])\n                                : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-footer\" },\n                    [\n                      _c(\n                        \"b-btn\",\n                        {\n                          attrs: { variant: \"outline-danger\" },\n                          on: { click: _vm.hideModalPerson }\n                        },\n                        [_vm._v(\"Fechar\")]\n                      ),\n                      _c(\n                        \"b-btn\",\n                        {\n                          attrs: {\n                            disabled: _vm.$v.formPerson.$invalid,\n                            variant: \"outline-success\",\n                            type: \"submit\"\n                          }\n                        },\n                        [_vm._v(\"Enviar\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"modalSuccess\",\n          attrs: {\n            \"hide-footer\": \"\",\n            \"hide-header-close\": \"\",\n            \"hide-header\": true,\n            centered: true,\n            \"no-close-on-backdrop\": true,\n            \"no-close-on-esc\": true,\n            size: \"sm\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"modal-title\" },\n            [\n              _c(\"b-row\", { attrs: { \"align-h\": \"center\" } }, [\n                _c(\"h4\", [_c(\"strong\", [_vm._v(\"Conta cadastrada\")])])\n              ])\n            ],\n            1\n          ),\n          _c(\"hr\"),\n          _c(\"b-row\", { attrs: { \"align-h\": \"center\" } }, [\n            _vm._v(\"\\n            O cadastro ocorreu com sucesso.\\n        \")\n          ]),\n          _c(\n            \"b-row\",\n            { staticClass: \"mt-2\", attrs: { \"align-h\": \"center\" } },\n            [\n              _vm.redirectTo == \"company\"\n                ? _c(\n                    \"b-button\",\n                    {\n                      attrs: { size: \"md\", variant: \"outline-primary\" },\n                      on: { click: _vm.redirectCompany }\n                    },\n                    [_vm._v(\"\\n                Acessar\\n            \")]\n                  )\n                : _c(\n                    \"b-button\",\n                    {\n                      attrs: { size: \"md\", variant: \"outline-primary\" },\n                      on: { click: _vm.redirectPerson }\n                    },\n                    [_vm._v(\"\\n                Acessar\\n            \")]\n                  )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"modalError\",\n          attrs: {\n            \"hide-footer\": \"\",\n            \"hide-header-close\": \"\",\n            \"hide-header\": true,\n            centered: true,\n            \"no-close-on-backdrop\": true,\n            \"no-close-on-esc\": true,\n            size: \"sm\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"modal-title\" },\n            [\n              _c(\"b-row\", { attrs: { \"align-h\": \"center\" } }, [\n                _c(\"h4\", [_c(\"strong\", [_vm._v(\"Algo deu errado...\")])])\n              ])\n            ],\n            1\n          ),\n          _c(\"hr\"),\n          _c(\n            \"b-row\",\n            { attrs: { \"align-h\": \"center\" } },\n            [\n              _c(\"b-col\", { attrs: { cols: \"8\" } }, [_vm._v(_vm._s(_vm.error))])\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            { staticClass: \"mt-2\", attrs: { \"align-h\": \"center\" } },\n            [\n              _c(\n                \"b-button\",\n                {\n                  attrs: { size: \"md\", variant: \"outline-primary\" },\n                  on: { click: _vm.redirectError }\n                },\n                [_vm._v(\"\\n                Tentar outra vez\\n            \")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}