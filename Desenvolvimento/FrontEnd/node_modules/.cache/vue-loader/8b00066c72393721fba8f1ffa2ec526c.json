{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/ChangeMyPass.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/ChangeMyPass.vue","mtime":1543447030908},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}  \n\n.header-gradient{\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n",{"version":3,"sources":["ChangeMyPass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChangeMyPass.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <b-container>\n        <!-- Seção para a alteração de senha -->\n        <section class=\"pt-2 pb-3\">            \n            <b-card>\n                <!-- Formulário para alteração de senha -->\n                <b-form id=\"changePasswordForm\" @submit=\"redirectPassword\">\n                    <b-container slot=\"header\">\n                        <h4 class=\"mb-3\" slot=\"header\"> Redefinição de senha </h4>\n                        \n                        <!-- Senha -->\n                        <b-form-group \n                            label=\"Senha\"\n                            label-for=\"userPassword\"\n                            :invalid-feedback=\"invalidPassword\"\n                            :state=\"statePassword\">\n                            <b-form-input type=\"password\"\n                                id=\"userPassword\"\n                                v-model=\"password\" required></b-form-input> \n                        </b-form-group>\n\n                        <!-- Confirmação de senha -->\n                        <b-form-group \n                            label=\"Confirmação de senha\"\n                            label-for=\"confirmPassword\"\n                            :invalid-feedback=\"invalidConfirmPassword\"\n                            :state=\"stateConfirmPassword\">\n                            <b-form-input type=\"password\"\n                                id=\"confirmPassword\"\n                                v-model=\"confirmPassword\" required></b-form-input> \n                        </b-form-group>                                                \n                    </b-container>   \n                    <b-row class=\"mr-3\" align-h=\"end\">\n                        <b-btn :disabled=\"disabledSendNewPass\" variant=\"outline-success\" type=\"submit\">Enviar</b-btn>\n                    </b-row>\n                    \n                </b-form>                \n            </b-card>\n        </section>\n\n        <!-- Modal expirou tempo do hash -->\n        <b-modal hide-footer\n            hide-header-close\n            :hide-header=\"true\"\n            :centered=\"true\"\n            :no-close-on-backdrop=\"true\"\n            :no-close-on-esc=\"true\"            \n            size=\"md\"\n            ref=\"modalExpiration\">  \n\n            <!-- Título do modal -->\n            <div class=\"modal-title\">\n                <b-row  align-h=\"center\">\n                    <h4><strong>Ocorreu um erro...</strong></h4>\n                </b-row>                \n            </div>\n\n            <!-- Separação título e body -->\n            <hr/>\n\n            <!-- Modal body -->\n            <b-row align-h=\"center\">\n                <b-col>\n                    O tempo para a alteração da senha expirou, \n                    faça uma outra requisição para alterar a senha.\n                </b-col>                \n            </b-row>\n\n            <b-row class=\"mt-2\" align-h=\"center\">\n                <b-button size=\"md\" variant=\"outline-primary\" @click=\"redirectLogin\">\n                    Voltar\n                </b-button>\n            </b-row>\n        </b-modal>          \n\n        <!-- Modal de sucesso -->\n        <b-modal hide-footer\n            hide-header-close\n            :hide-header=\"true\"\n            :centered=\"true\"\n            :no-close-on-backdrop=\"true\"\n            :no-close-on-esc=\"true\"            \n            size=\"sm\"\n            ref=\"modalSuccess\"> \n            \n            <!-- Título do modal -->   \n            <div class=\"modal-title\">\n                <b-row  align-h=\"center\">\n                    <h4><strong>Sucesso</strong></h4>\n                </b-row>                \n            </div>\n            \n            <!-- Separação título e body -->\n            <hr/>\n\n            <!-- Modal body -->\n            <b-row align-h=\"center\">\n                A troca de senha ocorreu com sucesso.\n            </b-row>                            \n            <b-row class=\"mt-2\" align-h=\"center\">\n                <b-button size=\"md\" variant=\"outline-primary\" @click=\"redirectSuccess\">\n                    Login\n                </b-button>\n            </b-row>\n        </b-modal>               \n        \n        <!-- Modal de erro -->\n        <b-modal hide-footer\n            hide-header-close\n            :hide-header=\"true\"\n            :centered=\"true\"\n            :no-close-on-backdrop=\"true\"\n            :no-close-on-esc=\"true\"            \n            size=\"sm\"\n            ref=\"modalError\">  \n\n            <!-- Título do modal -->\n            <div class=\"modal-title\">\n                <b-row align-h=\"center\">\n                    <h4><strong>Algo deu errado...</strong></h4>\n                </b-row>                \n            </div>\n\n            <!-- Separação título e body -->\n            <hr/>\n\n            <!-- Modal body -->\n            <b-row align-h=\"center\">\n                <b-col>\n                    {{ errorChangePass }}\n                </b-col>                \n            </b-row>                            \n            <b-row class=\"mt-2\" align-h=\"center\">\n                <b-button size=\"md\" variant=\"outline-primary\" @click=\"redirectError\">\n                    Tentar outra vez\n                </b-button>\n            </b-row>            \n        </b-modal> \n    </b-container>\n</template>\n\n<script>\n    // O comentário na linha de baixo desbilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\nimport axios from 'axios';\n\nexport default {\n    name: \"changeMyPass\",\n    data() {\n        return {\n            // Variável para controlar a exibição do modal de sucesso na troca da senha\n            modalSuccess: false,\n\n            // Variável para controlar a exibição do modal se algum erro aconteceu na troca da senha\n            modalError: false,\n\n            // Variável para controlar a exibição do modal informando\n            // se o hash ainda é válido\n            modalExpiration: false,\n\n            // Variável senha\n            password: '',\n\n            // Variável confirmação de senha\n            confirmPassword: '',\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição de interesses\n            errorChangePass: null,\n\n            // Variável para alterar o estado do botão de enviar\n            // se o conteúdo do formulário é válido\n            disabledSendNewPass: true,\n        }\n    },\n    methods: {\n        // Método para intermediar a mudança de senha\n        redirectPassword($event) {\n            this.changePassword();\n\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para adicionar interesses\n        changePassword() {\n            // Pegar o parâmetro key da URL\n            let uri = this.$route.query.key;\n\n            // Requisição POST para adicionar interesses           \n            API.post('/changeMyPass', {\n                newPass: this.password, \n                key: uri\n            }).then(() => {                \n                this.showModalSuccess();                                \n            }).catch(error => {\n                this.errorChangePass = error.response.data.message;\n                this.showModalError();\n            });\n        },\n\n        // Método que mostra o modal de sucesso na troca da senha\n        showModalSuccess () {\n            this.$refs.modalSuccess.show()\n        },\n\n        // Método para esconder o modal de sucesso na troca da senha\n        hideModalSuccess () {\n            this.$refs.modalSuccess.hide()\n        },\n\n        // Método que mostra o modal de sucesso na troca da senha\n        showModalError () {\n            this.$refs.modalError.show()\n        },\n\n        // Método para esconder o modal de sucesso na troca da senha\n        hideModalError () {\n            this.$refs.modalError.hide()\n        },\n\n        // Método que mostra o modal informando se o hash ainda é válido\n        showModalExpiration () {\n            this.$refs.modalExpiration.show()\n        },\n\n        // Método para esconder o modal informando se o hash ainda é válido\n        hideModalExpiration () {\n            this.$refs.modalExpiration.hide()\n        },\n\n        // Verifica se a senha é válida\n        validPassword (password) {\n            var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{5,}$/;\n            return re.test(password);\n        },\n\n        // Verifica se a senha de confirmação é a mesma\n        validConfirmPassword (confirmPassword, password) {\n            if(confirmPassword == password) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        // Redirecionamento para a página de login\n        // quando o hash já expirou\n        redirectLogin () {\n            this.$router.push('/login');\n        },\n\n\n        // Redirecionamento para a mesma página\n        // quando ocorre algum erro na troca da senha\n        redirectError () {\n            this.$router.go();\n        },\n\n        // Redirecionamento para a página de login\n        // quando não ocorre erro na troca da senha\n        redirectSuccess () {\n            this.$router.push('/login');\n        },\n    },\n    \n    computed: {\n        // Função para determinar o estado do input da senha\n        statePassword() {\n            return this.validPassword(this.password) ? true : false;\n        },\n\n        // Função para determinar o estado do input da confirmação\n        // da senha\n        stateConfirmPassword() {\n            return this.validConfirmPassword(this.confirmPassword, this.password) ? true : false;\n        },\n\n        // Função responsável por mostrar a mensagem\n        // se o input de senha não é válido\n        invalidPassword() {            \n            // A senha deve possuir no mínimo tamanho 5, uma letra maiúscula, uma letra minúscula e um número\n            // enquanto não for digitado nada, nenhuma mensagem de erro é mostrada\n            if(this.password.length == 0){\n                return '';\n            }else if (this.password.length < 5) {\n                return 'O tamanho mínimo da senha é 5'\n            } else if(!this.validPassword()) {\n                return 'A senha deve possuir no mínimo uma letra maiúscula, uma letra minúscula e um número';\n            }     \n        },\n\n        // Função responsável por mostrar a mensagem\n        // se o input de confirmação de senha não é válido\n        invalidConfirmPassword() {\n            // Enquanto o usuário não digitar o mínimo de caracteres,\n            // não é feita a verificação\n            if(this.confirmPassword.length >= 5){\n                if (this.validConfirmPassword(this.confirmPassword, this.password)) {\n                    // Se chegou nesse ponto da execução, está tudo certo e o\n                    // botão de enviar pode ser habilitado\n                    this.disabledSendNewPass = false;\n                    return '';\n                } else {\n                    return \"Digite a mesma senha\";\n                }\n            }\n            return '';\n        },\n    },\n    \n    // Função para verificar se o hash vindo não expirou\n    created: function () {                \n        // Pegar o parâmetro key da URL\n        let uri = this.$route.query.key;\n\n        // Requisição GET para verificar o hash \n        // (O APIService.js não é utilizado por problemas com o GET \n        // presente lá, quando se passa parâmetros)\n        axios.get('http://localhost:3000/verifyHashChangePass', {\n            params: {\n                key: uri\n            }                \n        },\n        {'Content-Type': 'application/x-www-form-urlencoded'},)\n        .catch(error => {\n            this.showModalExpiration();\n            this.errorChangePass = error.response.data.message;\n        });     \n    },\n};\n</script>\n\n<style>\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}  \n\n.header-gradient{\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n</style>\n"]}]}