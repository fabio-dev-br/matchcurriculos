{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/node_modules/@voerro/vue-tagsinput/src/VoerroTagsInput.vue?vue&type=template&id=d29272ca&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/@voerro/vue-tagsinput/src/VoerroTagsInput.vue","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1543518246810},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1543518246810},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { class: _vm.inputClass + \" tags-input\" },\n      [\n        _vm._l(_vm.tagBadges, function(badge, index) {\n          return _c(\n            \"span\",\n            { key: index, staticClass: \"badge badge-pill badge-light\" },\n            [\n              _c(\"span\", { domProps: { innerHTML: _vm._s(badge) } }),\n              _c(\"i\", {\n                staticClass: \"tags-input-remove\",\n                attrs: { href: \"#\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    _vm.removeTag(index)\n                  }\n                }\n              })\n            ]\n          )\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.input,\n              expression: \"input\"\n            }\n          ],\n          ref: \"taginput\",\n          attrs: { type: \"text\", placeholder: _vm.placeholder },\n          domProps: { value: _vm.input },\n          on: {\n            keydown: [\n              function($event) {\n                if (\n                  !(\"button\" in $event) &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                $event.preventDefault()\n                return _vm.tagFromInput($event)\n              },\n              function($event) {\n                if (!(\"button\" in $event) && $event.keyCode !== 8) {\n                  return null\n                }\n                return _vm.removeLastTag($event)\n              },\n              function($event) {\n                if (\n                  !(\"button\" in $event) &&\n                  _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                    \"Down\",\n                    \"ArrowDown\"\n                  ])\n                ) {\n                  return null\n                }\n                return _vm.nextSearchResult($event)\n              },\n              function($event) {\n                if (\n                  !(\"button\" in $event) &&\n                  _vm._k($event.keyCode, \"up\", 38, $event.key, [\n                    \"Up\",\n                    \"ArrowUp\"\n                  ])\n                ) {\n                  return null\n                }\n                return _vm.prevSearchResult($event)\n              }\n            ],\n            keyup: [\n              function($event) {\n                if (\n                  !(\"button\" in $event) &&\n                  _vm._k($event.keyCode, \"esc\", 27, $event.key, \"Escape\")\n                ) {\n                  return null\n                }\n                return _vm.ignoreSearchResults($event)\n              },\n              _vm.searchTag\n            ],\n            focus: _vm.onFocus,\n            blur: _vm.hideTypeahead,\n            value: _vm.tags,\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.input = $event.target.value\n            }\n          }\n        }),\n        _vm.elementId\n          ? _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.hiddenInput,\n                  expression: \"hiddenInput\"\n                }\n              ],\n              attrs: { type: \"hidden\", name: _vm.elementId, id: _vm.elementId },\n              domProps: { value: _vm.hiddenInput },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.hiddenInput = $event.target.value\n                }\n              }\n            })\n          : _vm._e()\n      ],\n      2\n    ),\n    _c(\n      \"p\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.searchResults.length,\n            expression: \"searchResults.length\"\n          }\n        ],\n        staticClass: \"typeahead\"\n      },\n      _vm._l(_vm.searchResults, function(tag, index) {\n        return _c(\"span\", {\n          key: index,\n          staticClass: \"badge\",\n          class: {\n            \"badge-primary\": index == _vm.searchSelection,\n            \"badge-dark\": index != _vm.searchSelection\n          },\n          domProps: { textContent: _vm._s(tag.text) },\n          on: {\n            mousedown: function($event) {\n              $event.preventDefault()\n              _vm.tagFromSearchOnClick(tag)\n            }\n          }\n        })\n      })\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}