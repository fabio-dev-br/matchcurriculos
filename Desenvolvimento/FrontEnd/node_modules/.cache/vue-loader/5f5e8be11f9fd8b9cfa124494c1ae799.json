{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalNoticiaP.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalNoticiaP.vue","mtime":1543517553131},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}  \n\n.header-gradient{\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n\n.form-control-tags-input {\n    display: block;\n    width: auto;\n    height: auto;\n    min-width: 100%;\n    min-height: calc(2.25rem + 5px);\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n\n",{"version":3,"sources":["PortalNoticiaP.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAucA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PortalNoticiaP.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <b-container>\n        <!-- Seção contendo o botão de cadastro de interesses\n             (pesquisa direta não foi implementada ainda) -->\n        <section class=\"pt-2 pb-3\">\n            <b-container>\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"1\">\n                            <icon name=\"search\"></icon>                                    \n                        </b-col>\n                        <b-col>\n                            <b-form-input type=\"search\" @keyup.enter=\"search\"\n                                placeholder=\"Pesquise algo...\"></b-form-input>\n                        </b-col>\n                    </b-row>\n                </b-card>                                                               \n            </b-container>            \n        </section>\n\n        <!-- Seção de exibição dos interesses existentes -->\n        <section class=\"mb-3\">\n            <div v-if=\"divInterests\">                \n                <b-card>\n                    <b-container slot=\"header\">\n                        <b-row align-h=\"start\">\n                            <b-col>\n                                <h2 slot=\"header\">Meus interesses</h2>\n                            </b-col>                                                            \n                            <template class=\"mt-2\" v-if=\"!alterToRemoveInterests\">\n                                <!-- Botão para abrir o modal de cadastro de interesses -->\n                                <b-button class=\"btn btn-sm bg-warning border-warning mr-3\" @click=\"showModalInterests\"> \n                                    <icon name=\"plus\"></icon>\n                                </b-button>           \n                            \n                                <!-- Botão para preparar para a remoção de interesses -->\n                                <b-button class=\"btn btn-sm bg-warning border-warning\" v-if=\"showRemove\" @click=\"prepareRemove\"> \n                                    <icon name=\"minus\"></icon>\n                                </b-button>\n                            </template>                                      \n                        </b-row>\n                    </b-container>                                                \n                    <ul id=\"interestsList\">\n                        <!-- Template que é mostrado inicialmente no carregamento da página\n                        e redireciona para uma pesquisa dos currículos relacionados ao interesse \n                        em questão                             -->\n                        <template v-if=\"showInterests\">\n                            <li v-for=\"interest in displayInterests\" :key=\"interest.id\">\n                                <!-- A manipulação dentro do link é para deixar a primeira\n                                letra do interesse maiúscula -->\n                                <b-link @click.prevent=\"search(interest.value)\">\n                                    {{ interest.text[0].toUpperCase() + interest.text.slice(1) }}\n                                </b-link>\n                            </li>                                \n                        </template>\n\n                        <!-- Template que prepara a interface para a remoção de interesses, é acionado pelo botão com ícone minus -->\n                        <template v-else>\n                            <b-form-group >\n                                <div><strong>Selecione os interesses que deseja deletar: </strong></div>                                    \n                                \n                                <!-- Checkbox-group pega o vetor já preparado (text e value), quando os interesses são recuperados\n                                do back-end, e mostra -->\n                                <b-form-checkbox-group id=\"interestsSelected\" name=\"interests\"\n                                    v-model=\"selected\" \n                                    :options=\"displayInterests\" stacked>\n                                </b-form-checkbox-group>                                    \n                            </b-form-group>                                \n                        </template>                            \n                    </ul>\n                    <div slot=\"footer\" v-if=\"alterToRemoveInterests\">\n                        <b-row align-h=\"end\" class=\"mr-2\">\n                            <!-- Botão para cancelar a remoção dos interesses -->\n                            <b-btn variant=\"danger mr-1\" @click=\"prepareRemove\"> \n                                Cancelar\n                            </b-btn>\n\n                            <!-- Botão para confirmar a remoção dos interesses -->\n                            <b-btn variant=\"warning\" @click=\"removeInterests\"> \n                                Confirmar\n                            </b-btn>        \n                        </b-row>                            \n                    </div>\n                </b-card>                \n            </div>                \n        </section>\n\n        <!-- Modal do cadastro de interesses (Precisa de validação) -->\n        <b-modal hide-footer\n            :centered=\"true\"\n            title=\"Cadastro de Interesses\"\n            size=\"lg\"\n            ref=\"modalRegInterests\">    \n                    \n            <!-- Modal body -->\n            <div class=\"modal-body\">\n                <!-- Formulário de interesses, contém: interesses -->\n                <b-form id=\"interestsForm\" @submit=\"redirectInterests\">\n\n                    <!-- Habilidades / Não foi colocado um limite -->\n                    <b-form-group \n                        label=\"Interesses *\"\n                        label-for=\"interestsTags\">\n\n                        <tags-input \n                            input-class=\"form-control-tags-input\"\n                            element-id=\"interestsTags\"\n                            v-model=\"formInterests.interests\"\n                            :validate=\"validateInterests\"\n                            placeholder=\"Digite um interesse\"></tags-input> \n                    </b-form-group>\n\n                    <!-- Modal footer -->\n                    <div class=\"modal-footer\">\n                        <b-btn variant=\"outline-danger\" @click=\"hideModalInterests\">Fechar</b-btn>\n                        <b-btn :disabled=\"$v.formInterests.$invalid\" variant=\"outline-success\" type=\"submit\">Enviar</b-btn>\n                    </div>  \n                </b-form>\n            </div>\n        </b-modal>        \n\n        <!-- Seção de exibição do resultado da busca -->\n        <section class=\"mb-3\">\n            <div v-if=\"divSearch\">\n                <b-card-group deck>\n                    <b-card header-tag=\"header\">\n                        <b-row slot=\"header\">\n                            <b-col>\n                                <h2 slot=\"header\">Resultados - {{ firstLetterUp(headerSearch) }} </h2>\n                            </b-col>\n                            <b-row align-h=\"end\" class=\"mr-2\">\n                                <!-- Botão para fechar a seção de busca -->\n                                <b-button class=\"btn btn-sm btn-danger text-light\" \n                                    @click=\"hideSearchSection\"> \n                                    <icon name=\"window-close\"></icon>\n                                </b-button>       \n                            </b-row> \n                        </b-row> \n                        <!-- Template contendo as possibilidades de resultados -->                                               \n                        <template id=\"searchList\">                            \n\n                            <!-- Template para mostrar os currículos existentes -->\n                            <template v-if=\"showCurricula\">\n                                <!-- Card para cada currículo contendo área, instituição, curso, ano de formação, link para download do\n                                currículo e data da última atualização-->\n                                <b-card                                \n                                    v-for=\"curriculum in curricula\"                                     \n                                    :key=\"curriculum.id\"\n                                    class=\"mb-4\">\n                                    <h4 class=\"pl-2 header-gradient\"> {{ firstLetterUp(curriculum.name) }} </h4>\n                                    <ul>\n                                        <!-- Área -->\n                                        <li>\n                                            <p class=\"card-text\"><Strong>Área: </Strong> {{ firstLetterUp(curriculum.area) }}</p>\n                                        </li>\n\n                                        <!-- Instituição -->\n                                        <li>\n                                            <p class=\"card-text\"><Strong>Instituição: </Strong> {{ firstLetterUp(curriculum.institute) }}</p>\n                                        </li>\n\n                                        <!-- Curso -->\n                                        <li>\n                                            <p class=\"card-text\"><Strong>Curso: </Strong> {{ firstLetterUp(curriculum.course) }}</p>\n                                        </li>\n\n                                        <!-- Ano de formação -->\n                                        <li>\n                                            <p class=\"card-text\"><Strong>Ano de formação: </Strong> {{ curriculum.graduate_year }}</p>\n                                        </li>\n\n                                        <!-- Link para baixar currículo junto com a data da última atualização -->\n                                        <li>\n                                            <p class=\"card-text\">\n                                                <Strong>\n                                                    Arquivo de currículo:                                                     \n                                                </Strong> \n                                                <b-link :href=\"'http://localhost:3000/curriculos/' + curriculum.hash_file\">\n                                                    Baixar\n                                                </b-link>\n                                                <small class=\"text-muted\">\n                                                    - Última atualização: {{ firstLetterUp(curriculum.reg_up) }}\n                                                </small>                                                \n                                            </p>\n                                        </li>\n\n                                        <!-- Habilidades -->\n                                        <li>\n                                            <Strong>Habilidades: </Strong>\n                                            <span class=\"tag-format pl-1 mr-2 text-dark\"\n                                                v-bind:key=\"hability.id\"\n                                                v-for=\"hability in curriculum.habilities\">\n                                                {{ firstLetterUp(hability) }}\n                                            </span>\n                                        </li>\n                                    </ul>                                    \n                                </b-card>\n                            </template>                            \n\n                            <!-- Template para informar que não existem resultados -->                            \n                            <template v-else>\n                                <div><strong>Não existem currículos com a habilidade desejada</strong></div> \n                            </template>\n                            \n                        </template>\n                        <div slot=\"footer\" v-if=\"alterToRemoveInterests\">\n                                                       \n                        </div>\n                    </b-card>\n                </b-card-group>                \n            </div>                \n        </section>\n    </b-container>\n</template>\n\n<script>\n    // O comentário na linha de baixo desabilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\nimport axios from 'axios';\n\n// Import das funções utilizadas do Vuelidate\nimport {    required, \n            minLength, \n            between, \n            maxLength, \n            email, \n            numeric } from 'vuelidate/lib/validators'\n\nexport default {\n    name: \"portalEmpresa\",\n    data() {\n        return {\n            // Variável para controlar a exibição do modal\n            modalRegInterests: false,\n            \n            // Todas as variáveis relacionadas à adição de interesses\n            // ficam no objeto formInterests\n            // para a validação adequada das informações do\n            // currículo, e apenas com tudo certo é possível \n            // fazer o envio\n            formInterests: {\n                interests: [\n                    'smart grid'\n                ],\n            },\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição de interesses\n            errorAddInterest: null,\n\n            // Variável para controlar a exibição da div de \n            // interesses\n            divInterests: false,\n\n            // Variável que recebe os interesses existentes \n            // da empresa, para visualização\n            displayInterests: null,\n\n            // Variável para controlar a exibição do botão de \n            // remover existente no footer\n            alterToRemoveInterests: false,\n\n            // Variável para alternar a exibição da página entre\n            // os interesses existentes e a interface de remoção deles\n            showInterests: true,\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na remoção de interesses\n            errorRemoveInterest: null,\n\n            // Variável contendo os interesses selecionados\n            selected: [],\n\n            // Váriável para exibir a div de resultados da busca\n            divSearch: false,\n\n            // Variável para exibir os currículos encontrados\n            showCurricula: false,\n\n            // Cabeçalho dos resultados\n            headerSearch: null,\n\n            // Currículos encontrados\n            curricula: null,\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na busca de interesses\n            errorSearchInterest: null,\n\n            // Variável para controlar a opção de remover\n            showRemove: true,\n        }\n    },\n    methods: {\n        // Método para intermediar a validação a adição de interesses\n        redirectInterests($event) {           \n            this.addInterests();\n\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para validar os interesses (Falta implementar)\n        validateInterests ($event) {\n            return true;\n        },\n\n        // Método para adicionar interesses\n        addInterests() {\n            // Requisição POST para adicionar interesses\n            API.post('/addInterests', {\n                interests: this.formInterests.interests\n            }).then(() => {                \n                // Recarrega a página\n                this.$router.go();\n            }).catch(error => {\n                this.errorAddInterest = error.message;;\n            });\n        },\n\n        // Método que mostra o modal para adicionar interesses\n        showModalInterests () {\n            this.$refs.modalRegInterests.show()\n        },\n\n        // Método que esconde o modal para adicionar interesses\n        hideModalInterests () {\n            this.$refs.modalRegInterests.hide()\n        },\n\n        // Método que prepara a página para a remoção de interesses\n        prepareRemove () {\n            this.showInterests = !this.showInterests;\n            this.alterToRemoveInterests = !this.alterToRemoveInterests;            \n        },\n\n        // Método que remove os interesses selecionados\n        removeInterests () {\n            // Requisição POST para adicionar um currículo            \n            API.post('/deleteInterests', {\n                interests: this.selected\n            }).then(() => {                \n                // Recarrega a página\n                this.$router.go();\n            }).catch(error => {\n                this.errorRemoveInterest = error.message;\n            });\n        },\n\n        // Método que busca os currículos relacionados com \n        // o interesse selecionado através do link\n        search (value) {\n            // Muda o valor de headerSearch para o interesse procurado\n            this.headerSearch = value;\n            \n            // Requisição GET para buscar currículos relacionados ao interesse dado\n            // (O APIService.js não é utilizado por problemas com o GET \n            // presente lá, quando se passa parâmetros)\n            axios.get('http://localhost:2999/searchCurByInt', {\n                params: {\n                    interests: value\n                }                \n            },\n            {'Content-Type': 'application/x-www-form-urlencoded'},)\n            .then(response => {\n                this.curricula = response.data.data[value];\n                \n                // Verifica se existe algum currículo relacionado à habilidade passada,\n                // se existe algum, no elemento searchList será mostrado todos os resultados, caso \n                // contrário, é mostrado uma mensagem de que não há resultados\n                if(!this.curricula) {\n                    this.showCurricula = false;\n                } else {\n                    this.showCurricula = true;                    \n                }\n\n            }); \n\n            // API.get('/searchCurByInt', {\n            //     params: {\n            //         interests: value\n            //     }\n            // }).then(response => {\n            //     // Esse log de console é utilizado para utilizar o response declarado\n            //     // e, assim, o warning, referente à não utilização, não ocorrer na compilação \n            //     console.log(response.data.code);\n                \n            //     // Variável currícula recebe os resultados da pesquisa no back-end\n            //     console.log(response.data.data);\n            //     // this.curricula = response.data.data.curricula;   \n                            \n            // }).catch(error => {\n            //     this.errorSearchInterest = error.response.data.message;\n            // });\n            \n            this.divSearch = true; \n        },\n\n        // Método para esconder a seção de resultados da busca\n        hideSearchSection () {\n            this.divSearch = !this.divSearch;\n        },\n\n        // Método para tornar a primeira letra maiúscula da palavra fornecida\n        firstLetterUp (word) {\n            return word[0].toUpperCase() + word.slice(1);\n        },\n    },\n\n    // Função para recuperar os interesses da empresa presentes no back-end\n    created: function () {        \n        // Requisição POST para fazer o login\n        API.get('/searchInt')\n        .then(response => {\n            // auxInterests é um vetor que auxilia na organização dos dados\n            // , provenientes do back-end, de maneira que na parte de remoção \n            // o check-box-group é montado automaticamente (text e value)\n            var auxInterests = [];   \n            // Verifica se há algum resultado para mostrar\n            if(response.data.data.length != 0) {\n                response.data.data.forEach(element => { \n                    // A manipulação dentro de text serve para deixar a primeira letra\n                    // maiúscula               \n                    auxInterests = auxInterests.concat(\n                        {text: this.firstLetterUp(element), value: element}\n                    );\n                    this.displayInterests = auxInterests;\n                });            \n            } else {\n                this.showRemove = false;\n            }\n\n            this.divInterests = true;\n        }).catch(error => {\n            this.error = error.response.message;\n        });\n    },\n\n    // Validações, para os forms existentes, feitas com o auxílio do Vuelidate\n    validations: {\n        // Validação do formulário de adição de interesses\n        formInterests: {\n            interests: {\n                required,\n            },\n        },              \n    },\n};\n</script>\n\n<style>\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}  \n\n.header-gradient{\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n\n.form-control-tags-input {\n    display: block;\n    width: auto;\n    height: auto;\n    min-width: 100%;\n    min-height: calc(2.25rem + 5px);\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n\n</style>\n"]}]}