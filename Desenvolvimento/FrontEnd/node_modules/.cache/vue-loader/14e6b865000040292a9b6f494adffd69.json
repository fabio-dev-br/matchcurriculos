{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/Login.vue","mtime":1543447030908},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    // O comentário na linha de baixo desabilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\n\nexport default {\n    name: \"login\",\n    data() {\n        return {\n            // Variável para o e-mail do login\n            email: '',\n\n            // Variável para a senha do login\n            password: '',\n\n            // Variável para permitir a função de lembrar-me\n            remember: false,\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição do currículo\n            error: null,\n\n            // Variável para controlar a exibição do modal de entrada de\n            // informações que levam a recuperação de senha\n            modalForgotPass: false,\n\n            // Variável e-mail para a recuperação de senha\n            emailForgot: '',\n\n            // Variável para controlar a exibição do modal que\n            // é mostrado logo após submeter o e-mail ao back-end\n            modalInfoForgot: false\n        }\n    },\n    methods: {\n        // Método para intermediar a validação do formulário de login\n        validate($event) {\n            if(this.isValid) {\n                this.login();\n            }\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para intermediar a validação do formulário de esqueci a senha\n        validateForgot($event) {\n            if(this.stateForgot) {\n                this.forgotPass();\n            }\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para fazer o login\n        login() {\n            // Requisição POST para fazer o login\n            API.post('/login2', {\n                email: this.email,\n                password: this.password\n            }).then(response => {\n                // Armazena o token recebido do back-end, este que é usado\n                // para recuperar as informações presentes no back-end\n                this.$store.commit('setAuthToken', response.data.data.token);\n                this.$store.commit('setName', response.data.data.nome);\n                this.$store.commit('setuserType', response.data.data.user_type);\n                // this.$store.commit('setuserType', response.data.data.user_type);\n\n                // Se o usuário é uma empresa (user_type = 0) redireciona para o portal da empresa\n                if(response.data.data.user_type == 0) {\n                    this.$router.push('/portal-empresa');\n                } else {\n                    this.$router.push('/portal-pessoa');\n                }\n            }).catch(error => {\n                this.error = error.message;\n            });\n        },\n\n        forgotPass () {\n            // Requisição POST para recuperar a senha\n            API.post('/forgotMyPass', {\n                email: this.emailForgot\n            }).then(response => {                \n                // Esconde o modal de esqueci a senha                \n                this.hideModalForgotPass();\n                \n                // Exibe o modal para informar o usuário\n                this.showModalInfoForgot();\n                \n                // Limpa o campo e-mail do formulário do esqueci a senha\n                this.emailForgot = '';\n            }).catch(error => {\n                // Exibe o modal para informar o usuário\n                this.hideModalForgotPass();\n                this.error = error.response.data.message;\n            });\n        },\n\n        // Método para exibir o modal de esqueci a senha\n        showModalForgotPass () {\n            this.$refs.modalForgotPass.show()\n        },\n\n        // Método para esconder o modal de esqueci a senha\n        hideModalForgotPass () {\n            this.$refs.modalForgotPass.hide()\n        },\n\n        // Método para exibir o modal de alerta após submeter\n        // o e-mail em esqueci a senha\n        showModalInfoForgot () {\n            this.$refs.modalInfoForgot.show()\n        },\n\n        // Método para esconder o modal de alerta após submeter\n        // o e-mail em esqueci a senha\n        hideModalInfoForgot () {\n            this.$refs.modalInfoForgot.hide()\n        },\n\n        // Verifica se o e-mail é válido\n        validEmail: function (email) {\n            var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/gi;\n            return re.test(email);\n        }\n    },\n    computed: {\n        isValid() {\n            return this.email && this.password.length > 4;\n        },\n\n        // Estado do input e-mail, verifica se é válido\n        // o input com uma expressão regular\n        stateForgot () {\n            return this.validEmail(this.emailForgot) ? true : false;\n        },\n        \n        // Função responsável por mostrar a mensagem\n        // se o input do e-mail não é válido\n        invalidForgot () {\n            if (this.validEmail(this.emailForgot)) {\n                return '';\n            } else {\n                return \"Digite um e-mail válido\";\n            }\n        },\n    }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n    <section class=\"pt-1 pb-5\">\n        <!-- Divisão do login -->\n        <div id=\"login\">\n            <h3 class=\"text-center font-weight-bold pt-5 py-3\">Login</h3>\n            <p class=\"text-center text-danger\" v-if=\"error\">{{ error }}</p>\n            <div class=\"container\" id=\"login-container\">\n                <div class=\"row justify-content-center align-items-center\" id=\"login-row\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <b-form @submit=\"validate\">\n                                <!-- E-mail -->\n                                <b-form-group>                                    \n                                    <b-form-text class=\"mb-2\" for=\"userEmail\"><icon name=\"envelope\"></icon> Seu e-mail</b-form-text>\n                                    <b-form-input type=\"email\"\n                                        id=\"userEmail\"  \n                                        v-model=\"email\"\n                                        placeholder=\"E-mail\" required></b-form-input>                         \n                                </b-form-group>\n                                \n                                <!-- Senha -->\n                                <b-form-group>\n                                    <b-form-text class=\"mb-2\" for=\"userPassword\"><icon name=\"lock\"></icon> Sua senha</b-form-text>\n                                    <b-form-input type=\"password\"\n                                        id=\"userPassword\" \n                                        v-model=\"password\"\n                                        placeholder=\"Senha\" required></b-form-input> \n                                </b-form-group>\n    \n                                <!-- Lembrar-me (Lembrete: o input checkbox deve vir antes do label, caso contrário, não funciona)-->\n                                <!-- <div class=\"align-items-start d-flex flex-column\">\n                                    <b-form-checkbox id=\"loginFormRemember\" v-model=\"remember\"\n                                        value=\"remember\"\n                                        unchecked-value=\"not_remember\">\n                                        Lembrar-me\n                                    </b-form-checkbox>\n                                </div>                         -->\n    \n                                <!-- Esqueceu a senha -->\n                                <div class=\"d-flex flex-column align-items-center pt-2\">                                                                                            \n                                    <b-link @click=\"showModalForgotPass\">\n                                        Esqueceu a senha?\n                                    </b-link>\n                                </div>                                                       \n    \n                                <!-- Botão de login  -->\n                                <div class=\"d-flex flex-column align-items-center mt-2 my-2\">\n                                    <b-btn class=\"btn btn-outline-dark my-2\" type=\"submit\">\n                                        Fazer login\n                                    </b-btn>                            \n                                </div>\n                            </b-form>                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Modal para a função esqueci a senha -->\n        <b-modal hide-footer\n            centered          \n            size=\"lg\"\n            ref=\"modalForgotPass\">    \n            <h5 slot=\"modal-title\">\n                <Strong> Recuperação de senha </Strong>\n            </h5>\n\n            <b-form @submit=\"validateForgot\">\n                <div class=\"modal-body\">\n                    <h6>Informe seu e-mail e enviaremos instruções para você redefinir sua senha.</h6>\n                    <hr class=\"separator\">\n                                        \n                    <!-- E-mail -->\n                    <b-form-group \n                        id=\"groupEmailForgot\"\n                        label=\"E-mail\"\n                        label-for=\"userEmail\"\n                        :invalid-feedback=\"invalidForgot\"\n                        :state=\"stateForgot\">\n                        <b-form-input id=\"emailForgot\" \n                            v-model.trim=\"emailForgot\" \n                            :state=\"stateForgot\"\n                            required></b-form-input>                         \n                    </b-form-group>\n                    \n                </div>\n                <div class=\"modal-footer mt-2\">\n                    <b-row align-h=\"end\">\n                        <b-btn variant=\"outline-dark mr-1\" @click=\"hideModalForgotPass\">Cancelar</b-btn>\n                        <b-btn variant=\"outline-success mr-1\" type=\"submit\">Enviar</b-btn>\n                    </b-row>  \n                </div>\n            </b-form>            \n        </b-modal>\n\n        <!-- Modal para informar o usuário da submissão do e-mail na função de esqueci a senha -->\n        <b-modal hide-footer\n            :centered=\"true\"          \n            size=\"md\"\n            ref=\"modalInfoForgot\">    \n            <h5 slot=\"modal-title\">\n                <Strong> Requisição enviada </Strong>\n            </h5>\n            <div class=\"modal-body\">\n                <p>\n                    Se o e-mail informado existe na plataforma, você receberá as instruções para a alteração da senha.\n                </p>\n            </div>            \n        </b-modal>\n    </section>\n</template>\n\n<script>\n    // O comentário na linha de baixo desabilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\n\nexport default {\n    name: \"login\",\n    data() {\n        return {\n            // Variável para o e-mail do login\n            email: '',\n\n            // Variável para a senha do login\n            password: '',\n\n            // Variável para permitir a função de lembrar-me\n            remember: false,\n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição do currículo\n            error: null,\n\n            // Variável para controlar a exibição do modal de entrada de\n            // informações que levam a recuperação de senha\n            modalForgotPass: false,\n\n            // Variável e-mail para a recuperação de senha\n            emailForgot: '',\n\n            // Variável para controlar a exibição do modal que\n            // é mostrado logo após submeter o e-mail ao back-end\n            modalInfoForgot: false\n        }\n    },\n    methods: {\n        // Método para intermediar a validação do formulário de login\n        validate($event) {\n            if(this.isValid) {\n                this.login();\n            }\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para intermediar a validação do formulário de esqueci a senha\n        validateForgot($event) {\n            if(this.stateForgot) {\n                this.forgotPass();\n            }\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para fazer o login\n        login() {\n            // Requisição POST para fazer o login\n            API.post('/login2', {\n                email: this.email,\n                password: this.password\n            }).then(response => {\n                // Armazena o token recebido do back-end, este que é usado\n                // para recuperar as informações presentes no back-end\n                this.$store.commit('setAuthToken', response.data.data.token);\n                this.$store.commit('setName', response.data.data.nome);\n                this.$store.commit('setuserType', response.data.data.user_type);\n                // this.$store.commit('setuserType', response.data.data.user_type);\n\n                // Se o usuário é uma empresa (user_type = 0) redireciona para o portal da empresa\n                if(response.data.data.user_type == 0) {\n                    this.$router.push('/portal-empresa');\n                } else {\n                    this.$router.push('/portal-pessoa');\n                }\n            }).catch(error => {\n                this.error = error.message;\n            });\n        },\n\n        forgotPass () {\n            // Requisição POST para recuperar a senha\n            API.post('/forgotMyPass', {\n                email: this.emailForgot\n            }).then(response => {                \n                // Esconde o modal de esqueci a senha                \n                this.hideModalForgotPass();\n                \n                // Exibe o modal para informar o usuário\n                this.showModalInfoForgot();\n                \n                // Limpa o campo e-mail do formulário do esqueci a senha\n                this.emailForgot = '';\n            }).catch(error => {\n                // Exibe o modal para informar o usuário\n                this.hideModalForgotPass();\n                this.error = error.response.data.message;\n            });\n        },\n\n        // Método para exibir o modal de esqueci a senha\n        showModalForgotPass () {\n            this.$refs.modalForgotPass.show()\n        },\n\n        // Método para esconder o modal de esqueci a senha\n        hideModalForgotPass () {\n            this.$refs.modalForgotPass.hide()\n        },\n\n        // Método para exibir o modal de alerta após submeter\n        // o e-mail em esqueci a senha\n        showModalInfoForgot () {\n            this.$refs.modalInfoForgot.show()\n        },\n\n        // Método para esconder o modal de alerta após submeter\n        // o e-mail em esqueci a senha\n        hideModalInfoForgot () {\n            this.$refs.modalInfoForgot.hide()\n        },\n\n        // Verifica se o e-mail é válido\n        validEmail: function (email) {\n            var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/gi;\n            return re.test(email);\n        }\n    },\n    computed: {\n        isValid() {\n            return this.email && this.password.length > 4;\n        },\n\n        // Estado do input e-mail, verifica se é válido\n        // o input com uma expressão regular\n        stateForgot () {\n            return this.validEmail(this.emailForgot) ? true : false;\n        },\n        \n        // Função responsável por mostrar a mensagem\n        // se o input do e-mail não é válido\n        invalidForgot () {\n            if (this.validEmail(this.emailForgot)) {\n                return '';\n            } else {\n                return \"Digite um e-mail válido\";\n            }\n        },\n    }\n};\n</script>"]}]}