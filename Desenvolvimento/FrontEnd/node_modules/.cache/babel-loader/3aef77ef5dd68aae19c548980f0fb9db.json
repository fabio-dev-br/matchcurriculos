{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-awesome/components/Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-awesome/components/Icon.vue","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1543518246810},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1534881725000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/home/daniel/Desktop/Git/FrontEnd/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar icons = {};\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator: function validator(val) {\n        if (val && !(val in icons)) {\n          console.warn(\"Invalid prop: prop \\\"name\\\" is referring to an unregistered icon \\\"\".concat(val, \"\\\".\") + \"\\nPlease make sure you have imported this icon before using it.\");\n          return false;\n        }\n\n        return true;\n      }\n    },\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator: function validator(val) {\n        return val === 'horizontal' || val === 'vertical';\n      }\n    },\n    label: String\n  },\n  data: function data() {\n    return {\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    };\n  },\n  computed: {\n    normalizedScale: function normalizedScale() {\n      var scale = this.scale;\n      scale = typeof scale === 'undefined' ? 1 : Number(scale);\n\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\"Invalid prop: prop \\\"scale\\\" should be a number over 0.\", this);\n        return this.outerScale;\n      }\n\n      return scale * this.outerScale;\n    },\n    klass: function klass() {\n      return _defineProperty({\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse\n      }, this.$options.name, true);\n    },\n    icon: function icon() {\n      if (this.name) {\n        return icons[this.name];\n      }\n\n      return null;\n    },\n    box: function box() {\n      if (this.icon) {\n        return \"0 0 \".concat(this.icon.width, \" \").concat(this.icon.height);\n      }\n\n      return \"0 0 \".concat(this.width, \" \").concat(this.height);\n    },\n    ratio: function ratio() {\n      if (!this.icon) {\n        return 1;\n      }\n\n      var _this$icon = this.icon,\n          width = _this$icon.width,\n          height = _this$icon.height;\n      return Math.max(width, height) / 16;\n    },\n    width: function width() {\n      return this.childrenWidth || this.icon && this.icon.width / this.ratio * this.normalizedScale || 0;\n    },\n    height: function height() {\n      return this.childrenHeight || this.icon && this.icon.height / this.ratio * this.normalizedScale || 0;\n    },\n    style: function style() {\n      if (this.normalizedScale === 1) {\n        return false;\n      }\n\n      return {\n        fontSize: this.normalizedScale + 'em'\n      };\n    },\n    raw: function raw() {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null;\n      }\n\n      var raw = this.icon.raw;\n      var ids = {};\n      raw = raw.replace(/\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g, function (match, quote, id) {\n        var uniqueId = getId();\n        ids[id] = uniqueId;\n        return \" id=\\\"\".concat(uniqueId, \"\\\"\");\n      });\n      raw = raw.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, function (match, rawId, _, pointerId) {\n        var id = rawId || pointerId;\n\n        if (!id || !ids[id]) {\n          return match;\n        }\n\n        return \"#\".concat(ids[id]);\n      });\n      return raw;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (!this.name && this.$children.length === 0) {\n      console.warn(\"Invalid prop: prop \\\"name\\\" is required.\");\n      return;\n    }\n\n    if (this.icon) {\n      return;\n    }\n\n    var width = 0;\n    var height = 0;\n    this.$children.forEach(function (child) {\n      child.outerScale = _this.normalizedScale;\n      width = Math.max(width, child.width);\n      height = Math.max(height, child.height);\n    });\n    this.childrenWidth = width;\n    this.childrenHeight = height;\n    this.$children.forEach(function (child) {\n      child.x = (width - child.width) / 2;\n      child.y = (height - child.height) / 2;\n    });\n  },\n  register: function register(data) {\n    for (var name in data) {\n      var icon = data[name];\n\n      if (!icon.paths) {\n        icon.paths = [];\n      }\n\n      if (icon.d) {\n        icon.paths.push({\n          d: icon.d\n        });\n      }\n\n      if (!icon.polygons) {\n        icon.polygons = [];\n      }\n\n      if (icon.points) {\n        icon.polygons.push({\n          points: icon.points\n        });\n      }\n\n      icons[name] = icon;\n    }\n  },\n  icons: icons\n};\nvar cursor = 0xd4937;\n\nfunction getId() {\n  return \"fa-\".concat((cursor++).toString(16));\n}",{"version":3,"sources":["Icon.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg version=\"1.1\"\n    :class=\"klass\"\n    :role=\"label ? 'img' : 'presentation'\"\n    :aria-label=\"label\"\n    :x=\"x\"\n    :y=\"y\"\n    :width=\"width\"\n    :height=\"height\"\n    :viewBox=\"box\"\n    :style=\"style\">\n    <slot>\n      <template v-if=\"icon && icon.paths\">\n        <path v-for=\"(path, i) in icon.paths\" :key=\"`path-${i}`\" v-bind=\"path\"/>\n      </template>\n      <template v-if=\"icon && icon.polygons\">\n        <polygon v-for=\"(polygon, i) in icon.polygons\" :key=\"`polygon-${i}`\" v-bind=\"polygon\"/>\n      </template>\n      <template v-if=\"icon && icon.raw\"><g v-html=\"raw\"></g></template>\n    </slot>\n  </svg>\n</template>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\nlet icons = {}\n\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator (val) {\n        if (val && !(val in icons)) {\n          console.warn(`Invalid prop: prop \"name\" is referring to an unregistered icon \"${val}\".` +\n            `\\nPlease make sure you have imported this icon before using it.`)\n          return false\n        }\n        return true\n      }\n    },\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator (val) {\n        return val === 'horizontal' || val === 'vertical'\n      }\n    },\n    label: String\n  },\n  data () {\n    return {\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    }\n  },\n  computed: {\n    normalizedScale () {\n      let scale = this.scale\n      scale = typeof scale === 'undefined' ? 1 : Number(scale)\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(`Invalid prop: prop \"scale\" should be a number over 0.`, this)\n        return this.outerScale\n      }\n      return scale * this.outerScale\n    },\n    klass () {\n      return {\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse,\n        [this.$options.name]: true\n      }\n    },\n    icon () {\n      if (this.name) {\n        return icons[this.name]\n      }\n      return null\n    },\n    box () {\n      if (this.icon) {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      }\n      return `0 0 ${this.width} ${this.height}`\n    },\n    ratio () {\n      if (!this.icon) {\n        return 1\n      }\n      let { width, height } = this.icon\n      return Math.max(width, height) / 16\n    },\n    width () {\n      return this.childrenWidth || this.icon && this.icon.width / this.ratio * this.normalizedScale || 0\n    },\n    height () {\n      return this.childrenHeight || this.icon && this.icon.height / this.ratio * this.normalizedScale || 0\n    },\n    style () {\n      if (this.normalizedScale === 1) {\n        return false\n      }\n      return {\n        fontSize: this.normalizedScale + 'em'\n      }\n    },\n    raw () {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null\n      }\n      let raw = this.icon.raw\n      let ids = {}\n      raw = raw.replace(/\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g, (match, quote, id) => {\n        let uniqueId = getId()\n        ids[id] = uniqueId\n        return ` id=\"${uniqueId}\"`\n      })\n      raw = raw.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, (match, rawId, _, pointerId) => {\n        let id = rawId || pointerId\n        if (!id || !ids[id]) {\n          return match\n        }\n\n        return `#${ids[id]}`\n      })\n\n      return raw\n    }\n  },\n  mounted () {\n    if (!this.name && this.$children.length === 0) {\n      console.warn(`Invalid prop: prop \"name\" is required.`)\n      return\n    }\n\n    if (this.icon) {\n      return\n    }\n\n    let width = 0\n    let height = 0\n    this.$children.forEach(child => {\n      child.outerScale = this.normalizedScale\n\n      width = Math.max(width, child.width)\n      height = Math.max(height, child.height)\n    })\n    this.childrenWidth = width\n    this.childrenHeight = height\n    this.$children.forEach(child => {\n      child.x = (width - child.width) / 2\n      child.y = (height - child.height) / 2\n    })\n  },\n  register (data) {\n    for (let name in data) {\n      let icon = data[name]\n\n      if (!icon.paths) {\n        icon.paths = []\n      }\n      if (icon.d) {\n        icon.paths.push({ d: icon.d })\n      }\n\n      if (!icon.polygons) {\n        icon.polygons = []\n      }\n      if (icon.points) {\n        icon.polygons.push({ points: icon.points })\n      }\n\n      icons[name] = icon\n    }\n  },\n  icons\n}\n\nlet cursor = 0xd4937\nfunction getId () {\n  return `fa-${(cursor++).toString(16)}`\n}\n</script>\n"],"sourceRoot":"node_modules/vue-awesome/components"}]}