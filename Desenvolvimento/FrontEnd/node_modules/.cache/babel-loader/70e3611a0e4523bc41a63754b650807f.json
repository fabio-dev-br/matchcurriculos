{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js!/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalNoticiaE.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalNoticiaE.vue","mtime":1543528912199},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// O comentário na linha de baixo desabilita os warnings\n\n/* eslint-disable */\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService'; // Import das funções utilizadas do Vuelidate\n\nimport { required, minLength, between, maxLength, email, numeric } from 'vuelidate/lib/validators';\nexport default {\n  name: \"portalNoticiaE\",\n  data: function data() {\n    return {\n      // Variável para controlar a exibição do modal\n      modalRegNotice: false,\n      // Todas as variáveis relacionadas à adição de noticia\n      // ficam no objeto formNotice\n      // para a validação adequada das informações do\n      // noticia, e apenas com tudo certo é possível \n      // fazer o envio\n      formNotice: {\n        title: '',\n        description: ''\n      },\n      // Variável que recebe o erro do back caso\n      // haja algum erro na adição do noticia\n      error: null,\n      // Variável que controla a exibição da \n      // div de resultados da busca\n      ifResults: false,\n      // Variável que recebe os resultados \n      // da pesquisa\n      results: null,\n      // Variável para exibir o botão de adição de noticia\n      alreadyAddNotice: false,\n      // Variável para exibir o noticia do usuário\n      showNotice: false,\n      // Variável para receber e exibir as informações do noticia\n      Notice: null,\n      // Variável para controlar a exibição do modal de confirmação de remoção do noticia\n      modalRemove: false,\n      // Método para tornar a primeira letra maiúscula da palavra fornecida\n      firstLetterUp: function firstLetterUp(word) {\n        return word[0].toUpperCase() + word.slice(1);\n      }\n    };\n  },\n  methods: {\n    // Método para intermediar a adição de noticia\n    redirectAddNotice: function redirectAddNotice($event) {\n      this.addNotice(); // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n\n      $event.preventDefault();\n    },\n    // Método para adicionar um noticia\n    addNotice: function addNotice() {\n      var _this = this;\n\n      // O token  do usuário é recuperado e adicionado ao header da \n      // requisição para enviá-lo ao back-end\n      API.token = this.$store.getters.authToken; // O objeto formData é instaciado apenas dentro do trecho de código ao\n      // qual ele pertence, através da instrução let\n\n      var formData = new FormData();\n      formData.append('title', this.formNotice.title);\n      formData.append('description', this.formNotice.description); // Requisição POST para adicionar as informações do noticia\n      // e o arquivo de noticia\n\n      API.postFile('/addNotice', formData).then(function () {\n        // Recarrega a página\n        _this.$router.go();\n      });\n    },\n    // Método para remover noticia\n    removeNotice: function removeNotice() {\n      var _this2 = this;\n\n      // O token  do usuário é recuperado e adicionado ao header da \n      // requisição para enviá-lo ao back-end\n      API.token = this.$store.getters.authToken; // Requisição DELETE para remover o noticia            \n\n      API.delete('/removeNotice').then(function () {\n        _this2.hideModalRemove();\n\n        _this2.alreadyAddNotice = false;\n        _this2.showNotice = false;\n      });\n    },\n    // Método que mostra o modal para adicionar noticias\n    showModalNotice: function showModalNotice() {\n      this.$refs.modalRegNotice.show();\n    },\n    // Método para esconder o modal de adicionar noticias\n    hideModalNotice: function hideModalNotice() {\n      this.$refs.modalRegNotice.hide();\n    },\n    // Método que mostra o modal para confirmar a remoção do noticia\n    showModalRemove: function showModalRemove() {\n      this.$refs.modalRemove.show();\n    },\n    // Método para esconder o modal para confirmar a remoção do noticia\n    hideModalRemove: function hideModalRemove() {\n      this.$refs.modalRemove.hide();\n    }\n  },\n  // Função para recuperar as informações do noticia no back-end\n  created: function created() {\n    var _this3 = this;\n\n    // O token  do usuário é recuperado e adicionado ao header da \n    // requisição para enviá-lo ao back-end\n    API.token = this.$store.getters.authToken; // Requisição POST para recuperar o noticia\n\n    API.get('/getNotice').then(function (response) {\n      // É necessário verificar se o noticia não foi excluído para a sua exibição,\n      // isso se dá analisando se o hash_file vindo do back é NULL,\n      if (response.data.data[\"hash_file\"]) {\n        _this3.Notice = response.data.data;\n        _this3.alreadyAddNotice = true;\n        _this3.showNotice = true;\n      }\n    }).catch(function (error) {\n      _this3.error = error.message;\n    });\n  },\n  // Validações, para os forms existentes, feitas com o auxílio do Vuelidate\n  validations: {\n    // Validação do formulário de adição de noticia \n    formNotice: {\n      title: {\n        required: required,\n        minLength: minLength(4)\n      },\n      description: {\n        required: required,\n        minLength: minLength(2)\n      }\n    }\n  }\n};",{"version":3,"sources":["PortalNoticiaE.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;;AACA;AAEA;AACA,OAAA,GAAA,MAAA,2BAAA,C,CAEA;;AACA,SAAA,QAAA,EACA,SADA,EAEA,OAFA,EAGA,SAHA,EAIA,KAJA,EAKA,OALA,QAKA,0BALA;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,cAAA,EAAA,KAFA;AAIA;AACA;AACA;AACA;AACA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA;AAFA,OATA;AAcA;AACA;AACA,MAAA,KAAA,EAAA,IAhBA;AAkBA;AACA;AACA,MAAA,SAAA,EAAA,KApBA;AAsBA;AACA;AACA,MAAA,OAAA,EAAA,IAxBA;AA0BA;AACA,MAAA,gBAAA,EAAA,KA3BA;AA6BA;AACA,MAAA,UAAA,EAAA,KA9BA;AAgCA;AACA,MAAA,MAAA,EAAA,IAjCA;AAmCA;AACA,MAAA,WAAA,EAAA,KApCA;AAsCA;AACA,MAAA,aAvCA,yBAuCA,IAvCA,EAuCA;AACA,eAAA,IAAA,CAAA,CAAA,CAAA,CAAA,WAAA,KAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AAzCA,KAAA;AA2CA,GA9CA;AA+CA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,iBAFA,6BAEA,MAFA,EAEA;AACA,WAAA,SAAA,GADA,CAGA;;AACA,MAAA,MAAA,CAAA,cAAA;AACA,KAPA;AASA;AACA,IAAA,SAVA,uBAUA;AAAA;;AACA;AACA;AACA,MAAA,GAAA,CAAA,KAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAHA,CAKA;AACA;;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AAEA,MAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,UAAA,CAAA,KAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,UAAA,CAAA,WAAA,EAVA,CAYA;AACA;;AACA,MAAA,GAAA,CAAA,QAAA,CAAA,YAAA,EAAA,QAAA,EAAA,IAAA,CAAA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,EAAA;AACA,OAHA;AAIA,KA5BA;AA8BA;AACA,IAAA,YA/BA,0BA+BA;AAAA;;AACA;AACA;AACA,MAAA,GAAA,CAAA,KAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAHA,CAKA;;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,eAAA;;AACA,QAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAJA;AAKA,KA1CA;AA4CA;AACA,IAAA,eA7CA,6BA6CA;AACA,WAAA,KAAA,CAAA,cAAA,CAAA,IAAA;AACA,KA/CA;AAiDA;AACA,IAAA,eAlDA,6BAkDA;AACA,WAAA,KAAA,CAAA,cAAA,CAAA,IAAA;AACA,KApDA;AAsDA;AACA,IAAA,eAvDA,6BAuDA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,IAAA;AACA,KAzDA;AA2DA;AACA,IAAA,eA5DA,6BA4DA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,IAAA;AACA;AA9DA,GA/CA;AAkHA;AACA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA;AACA;AACA,IAAA,GAAA,CAAA,KAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAHA,CAKA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AACA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,IAAA;AACA;AACA,KATA,EASA,KATA,CASA,UAAA,KAAA,EAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,KAAA,CAAA,OAAA;AACA,KAXA;AAYA,GArIA;AAuIA;AACA,EAAA,WAAA,EAAA;AACA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,OADA;AAKA,MAAA,WAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA;AALA;AAFA;AAxIA,CAAA","sourcesContent":["<template>\n    <b-container>\n        \n        <!-- Seção contendo o campo de pesquisa e o botão de cadastro de noticia\n             (pesquisa direta não foi implementada ainda) -->\n        <section class=\"pt-2 pb-3\">\n            <b-container>\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"1\">\n                            <icon name=\"search\"></icon>                                    \n                        </b-col>\n                        <b-col>\n                            <b-form-input type=\"search\" @keyup.enter=\"search\"\n                                placeholder=\"Pesquise algo...\"></b-form-input>\n                        </b-col>\n                    </b-row>\n                </b-card>                                                                           \n            </b-container>            \n        </section>\n\n        <!-- Seção de noticia -->\n        <section>\n            <div class=\"mt-3 mb-3\">                                    \n                <b-card>\n                    <b-container slot=\"header\">\n                        <b-row align-h=\"start\">\n                            <b-col>\n                                <h2 slot=\"header\">Minhas notícias</h2>\n                            </b-col>\n\n                            <!-- Botão para abrir o modal de cadastro de noticia -->\n                            <b-button class=\"btn btn-sm bg-warning border-warning mr-3\"                                     \n                                @click=\"showModalNotice\"\n                                v-if=\"!alreadyAddNotice\"> \n                                <icon name=\"plus\"></icon>\n                            </b-button>                                           \n                        </b-row>\n                    </b-container>                                                \n                    \n                    <!-- Se exisitir, o noticia é apresentado junto com o carregamento da página -->\n                    <b-container class=\"align-items-center w-75\" v-if=\"showNotice\">\n                        <b-card> \n                            <!-- Body noticia -->\n                            <!-- As manipulações dentro de cada 'li' são feitas para deixar a 1ª letra \n                                maiúscula em cada item-->\n                            <ul class=\"list-group list-group-flush\">                                \n\n                                <!-- Instituição -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Instituição: </Strong> {{ firstLetterUp(Notice.description) }}\n                                </li>\n\n                                <!-- Curso -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Curso: </Strong> {{ firstLetterUp(Notice.title) }}\n                                </li>                              \n                                \n                            </ul>\n                            \n                            <!-- Footer noticia -->\n                            <div slot=\"footer\" v-if=\"alreadyAddNotice\">\n                                <b-row align-h=\"end\" class=\"mr-2\">\n                                    <!-- Botão para abrir o modal de confirmação de remoção do noticia -->\n                                    <b-button class=\"btn btn-sm btn-danger text-light\" @click=\"showModalRemove\"> \n                                        Excluir notícia\n                                    </b-button>\n                                </b-row>                            \n                            </div>\n                        </b-card>                             \n                    </b-container>                                                          \n                </b-card>                                  \n            </div> \n        </section>\n\n        <!-- Seção de exibição de resultados da pesquisa \n             (pesquisa direta não foi implementada ainda) -->\n        <section>\n                <b-container>\n                    <h1 v-if=\"ifResults\">\n                        Resultados\n                    </h1>\n                </b-container>\n        </section>\n        \n        <!-- Modal de cadastro de noticia (Precisa de validação)-->\n        <b-modal hide-footer\n            :centered=\"true\"\n            title=\"Cadastro de notícia\"\n            size=\"lg\"\n            ref=\"modalRegNotice\">    \n                    \n            <!-- Modal body -->\n            <div class=\"modal-body\">\n                <!-- Formulário de noticia, contém: área, curso, arquivo, instituto, ano de formação, id de usuário e habilidades -->\n                <b-form id=\"NoticeForm\" @submit.prevent=\"redirectAddNotice\">\n\n                    <!-- Título -->\n                    <b-form-group\n                        label=\"Título\"\n                        label-for=\"NoticeTitle\">\n                        <b-form-input type=\"text\"\n                            id=\"NoticeTitle\"        \n                            v-model=\"formNotice.title\"\n                            :state=\"!$v.formNotice.title.$invalid\"                            \n                            aria-describedby=\"inputNoticeTitleFeedback\"\n                            placeholder=\"Digite título da notícia...\" required></b-form-input>\n                        <b-form-invalid-feedback id=\"inputNoticeTitleFeedback\">\n                            <p v-if=\"!$v.formNotice.title.required\">\n                                Preencha este campo.\n                            </p>                                      \n                        </b-form-invalid-feedback>                        \n                    </b-form-group>\n\n\n                    <!-- Descrição -->\n                    <b-form-group\n                        label=\"Descrição\"\n                        label-for=\"NoticeDescription\">\n                        <b-form-input type=\"text\" \n                            id=\"NoticeDescription\"        \n                            v-model=\"formNotice.description\"\n                            :state=\"!$v.formNotice.description.$invalid\"\n                            aria-describedby=\"inputNoticeDescriptionFeedback\"\n                            placeholder=\"Digite a notícia\" required></b-form-input>\n                        <b-form-invalid-feedback id=\"inputNoticeDescriptionFeedback\">\n                            <p v-if=\"!$v.formNotice.description.required\">\n                                Preencha este campo.\n                            </p>                                      \n                        </b-form-invalid-feedback>   \n                    </b-form-group>\n\n                    <!-- Modal footer -->\n                    <div class=\"modal-footer\">\n                        <b-btn variant=\"outline-danger\" @click=\"hideModalNotice\">Fechar</b-btn>\n                        <b-btn :disabled=\"$v.formNotice.$invalid\" variant=\"outline-success\" type=\"submit\">Enviar</b-btn>\n                    </div>  \n                </b-form>\n            </div>\n        </b-modal>\n\n        <!-- Modal de confirmação de remoção -->\n        <b-modal hide-footer\n            :centered=\"true\"          \n            size=\"md\"\n            ref=\"modalRemove\">    \n            <h5 slot=\"modal-title\">\n                <Strong> Confirmação </Strong>\n            </h5>\n            <div class=\"modal-body\">\n                Deseja realmente excluir o noticia?             \n            </div>\n            <div class=\"modal-footer mt-2\">\n                <b-row align-h=\"end\">\n                    <b-btn variant=\"outline-dark mr-1\" @click=\"hideModalRemove\">Não</b-btn>\n                    <b-btn variant=\"outline-success mr-1\" @click=\"removeNotice\">Sim</b-btn>\n                </b-row>  \n            </div>\n            \n        </b-modal>\n\n    </b-container>\n</template>\n\n<script>\n    // O comentário na linha de baixo desabilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\n\n// Import das funções utilizadas do Vuelidate\nimport {    required, \n            minLength, \n            between, \n            maxLength, \n            email, \n            numeric } from 'vuelidate/lib/validators'\n\nexport default {\n    name: \"portalNoticiaE\",\n    data() {\n        return {\n            // Variável para controlar a exibição do modal\n            modalRegNotice: false,\n\n            // Todas as variáveis relacionadas à adição de noticia\n            // ficam no objeto formNotice\n            // para a validação adequada das informações do\n            // noticia, e apenas com tudo certo é possível \n            // fazer o envio\n            formNotice: {\n                title: '',\n                description: ''\n            },                    \n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição do noticia\n            error: null,\n\n            // Variável que controla a exibição da \n            // div de resultados da busca\n            ifResults: false,\n            \n            // Variável que recebe os resultados \n            // da pesquisa\n            results: null,\n\n            // Variável para exibir o botão de adição de noticia\n            alreadyAddNotice: false,\n\n            // Variável para exibir o noticia do usuário\n            showNotice: false,\n\n            // Variável para receber e exibir as informações do noticia\n            Notice: null,\n\n            // Variável para controlar a exibição do modal de confirmação de remoção do noticia\n            modalRemove: false,\n\n            // Método para tornar a primeira letra maiúscula da palavra fornecida\n            firstLetterUp (word) {\n                return word[0].toUpperCase() + word.slice(1);\n            },\n        }\n    },\n    methods: {\n        // Método para intermediar a adição de noticia\n        redirectAddNotice($event) {        \n            this.addNotice();\n\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para adicionar um noticia\n        addNotice() {\n            // O token  do usuário é recuperado e adicionado ao header da \n            // requisição para enviá-lo ao back-end\n            API.token = this.$store.getters.authToken;\n\n            // O objeto formData é instaciado apenas dentro do trecho de código ao\n            // qual ele pertence, através da instrução let\n            let formData = new FormData();\n           \n            formData.append('title', this.formNotice.title);            \n            formData.append('description', this.formNotice.description);\n                        \n            // Requisição POST para adicionar as informações do noticia\n            // e o arquivo de noticia\n            API.postFile('/addNotice', formData).then(() => {                \n                // Recarrega a página\n                this.$router.go();\n            });\n        },\n\n        // Método para remover noticia\n        removeNotice () {\n            // O token  do usuário é recuperado e adicionado ao header da \n            // requisição para enviá-lo ao back-end\n            API.token = this.$store.getters.authToken;\n            \n            // Requisição DELETE para remover o noticia            \n            API.delete('/removeNotice').then(() => {\n                this.hideModalRemove();\n                this.alreadyAddNotice = false;\n                this.showNotice = false;                \n            });\n        },\n\n        // Método que mostra o modal para adicionar noticias\n        showModalNotice () {\n            this.$refs.modalRegNotice.show()\n        },\n\n        // Método para esconder o modal de adicionar noticias\n        hideModalNotice () {\n            this.$refs.modalRegNotice.hide()\n        },\n\n        // Método que mostra o modal para confirmar a remoção do noticia\n        showModalRemove () {\n            this.$refs.modalRemove.show()\n        },\n\n        // Método para esconder o modal para confirmar a remoção do noticia\n        hideModalRemove () {\n            this.$refs.modalRemove.hide()\n        },\n\n        \n    },\n\n    // Função para recuperar as informações do noticia no back-end\n    created: function () {\n        // O token  do usuário é recuperado e adicionado ao header da \n        // requisição para enviá-lo ao back-end\n        API.token = this.$store.getters.authToken;\n        \n        // Requisição POST para recuperar o noticia\n        API.get('/getNotice')\n        .then(response => {                        \n            // É necessário verificar se o noticia não foi excluído para a sua exibição,\n            // isso se dá analisando se o hash_file vindo do back é NULL,\n            if(response.data.data[\"hash_file\"]) {\n                this.Notice = response.data.data;\n                this.alreadyAddNotice = true;\n                this.showNotice = true;\n            }\n        }).catch(error => {\n            this.error = error.message;\n        });\n    },\n\n    // Validações, para os forms existentes, feitas com o auxílio do Vuelidate\n    validations: {\n        // Validação do formulário de adição de noticia \n        formNotice: {\n            title: {\n                required,\n                minLength: minLength(4),\n            },\n            description: {\n                required,\n                minLength: minLength(2),\n            },         \n          \n        },\n        \n    },\n};\n</script>\n\n<style>\n\n.header-gradient {\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n\n.form-control-tags-input {\n    display: block;\n    width: auto;\n    height: auto;\n    min-width: 100%;\n    min-height: calc(2.25rem + 5px);\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n</style>\n"],"sourceRoot":"src/components/pages"}]}