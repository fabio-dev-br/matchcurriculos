{"remainingRequest":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js!/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalPessoa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Desktop/Git/FrontEnd/src/components/pages/PortalPessoa.vue","mtime":1543447030908},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1543518246810},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1534881725000},{"path":"/home/daniel/Desktop/Git/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// O comentário na linha de baixo desabilita os warnings\n\n/* eslint-disable */\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService'; // Import das funções utilizadas do Vuelidate\n\nimport { required, minLength, between, maxLength, email, numeric } from 'vuelidate/lib/validators';\nexport default {\n  name: \"portalPessoa\",\n  data: function data() {\n    return {\n      // Variável para controlar a exibição do modal\n      modalRegCurriculum: false,\n      // Todas as variáveis relacionadas à adição de currículo\n      // ficam no objeto formCurriculum\n      // para a validação adequada das informações do\n      // currículo, e apenas com tudo certo é possível \n      // fazer o envio\n      formCurriculum: {\n        area: null,\n        course: '',\n        file: '',\n        institute: '',\n        graduateYear: this.currentYear(),\n        habilities: ['smart grid']\n      },\n      // Todas as variáveis relacionadas à atualização de currículo\n      // ficam no objeto formUpdate\n      // para a validação adequada das informações do\n      // currículo, e apenas com tudo certo é possível \n      // fazer o envio\n      formUpdate: {\n        file: '',\n        habilities: ['smart grid']\n      },\n      // Variável que recebe o erro do back caso\n      // haja algum erro na adição do currículo\n      error: null,\n      // Variável que controla a exibição da \n      // div de resultados da busca\n      ifResults: false,\n      // Variável que recebe os resultados \n      // da pesquisa\n      results: null,\n      // Variável para exibir o botão de adição de currículo\n      alreadyAddCurriculum: false,\n      // Variável para exibir o currículo do usuário\n      showCurriculum: false,\n      // Variável para receber e exibir as informações do currículo\n      curriculum: null,\n      // Variável para controlar a exibição do modal de confirmação de remoção do currículo\n      modalRemove: false,\n      // Variável para controlar a exibição do modal de atualização do currículo\n      modalUpdate: false,\n      // Variável contendo todos os anos possíveis para o ano de formação\n      yearList: this.listYears(),\n      // Método para tornar a primeira letra maiúscula da palavra fornecida\n      firstLetterUp: function firstLetterUp(word) {\n        return word[0].toUpperCase() + word.slice(1);\n      }\n    };\n  },\n  methods: {\n    // Método para intermediar a adição de currículo\n    redirectAddCurriculum: function redirectAddCurriculum($event) {\n      this.addCurriculum(); // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n\n      $event.preventDefault();\n    },\n    // Método para intermediar a atualização de currículo\n    redirectUpdate: function redirectUpdate($event) {\n      this.updateCurriculum(); // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n\n      $event.preventDefault();\n    },\n    // Método para validar as habilidades (Falta implementar)\n    validateHabilities: function validateHabilities($event) {\n      return true;\n    },\n    // Método para adicionar um currículo\n    addCurriculum: function addCurriculum() {\n      var _this = this;\n\n      // O token  do usuário é recuperado e adicionado ao header da \n      // requisição para enviá-lo ao back-end\n      API.token = this.$store.getters.authToken; // O objeto formData é instaciado apenas dentro do trecho de código ao\n      // qual ele pertence, através da instrução let\n\n      var formData = new FormData();\n      formData.append('area', this.formCurriculum.area);\n      formData.append('course', this.formCurriculum.course);\n      formData.append('file', this.formCurriculum.file);\n      formData.append('institute', this.formCurriculum.institute);\n      formData.append('graduate_year', this.formCurriculum.graduateYear);\n\n      for (var i = 0; i < this.formCurriculum.habilities.length; i++) {\n        formData.append('habilities[]', this.formCurriculum.habilities[i]);\n      } // Requisição POST para adicionar as informações do currículo\n      // e o arquivo de currículo\n\n\n      API.postFile('/addCurriculum', formData).then(function () {\n        // Recarrega a página\n        _this.$router.go();\n      });\n    },\n    // Método para remover currículo\n    removeCurriculum: function removeCurriculum() {\n      var _this2 = this;\n\n      // O token  do usuário é recuperado e adicionado ao header da \n      // requisição para enviá-lo ao back-end\n      API.token = this.$store.getters.authToken; // Requisição DELETE para remover o currículo            \n\n      API.delete('/removeCurriculum').then(function () {\n        _this2.hideModalRemove();\n\n        _this2.alreadyAddCurriculum = false;\n        _this2.showCurriculum = false;\n      });\n    },\n    // Método para atualizar currículo\n    updateCurriculum: function updateCurriculum() {\n      var _this3 = this;\n\n      // O token  do usuário é recuperado e adicionado ao header da \n      // requisição para enviá-lo ao back-end\n      API.token = this.$store.getters.authToken; // O objeto formData é instaciado apenas dentro do trecho de código ao\n      // qual ele pertence, através da instrução let\n\n      var formData = new FormData();\n      formData.append('file', this.formUpdate.file);\n\n      for (var i = 0; i < this.formUpdate.habilities.length; i++) {\n        formData.append('habilities[]', thisthis.formUpdate.habilities[i]);\n      } // Requisição POST para adicionar as informações do currículo\n      // e o arquivo de currículo\n\n\n      API.postFile('/updateCurriculum', formData).then(function () {\n        // Recarrega a página\n        _this3.$router.go();\n      });\n    },\n    // Método que mostra o modal para adicionar currículos\n    showModalCurriculum: function showModalCurriculum() {\n      this.$refs.modalRegCurriculum.show();\n    },\n    // Método para esconder o modal de adicionar currículos\n    hideModalCurriculum: function hideModalCurriculum() {\n      this.$refs.modalRegCurriculum.hide();\n    },\n    // Método que mostra o modal para confirmar a remoção do currículo\n    showModalRemove: function showModalRemove() {\n      this.$refs.modalRemove.show();\n    },\n    // Método para esconder o modal para confirmar a remoção do currículo\n    hideModalRemove: function hideModalRemove() {\n      this.$refs.modalRemove.hide();\n    },\n    // Método que mostra o modal para atulizar currículo\n    showModalUpdate: function showModalUpdate() {\n      this.$refs.modalUpdate.show();\n    },\n    // Método para esconder o modal de atualizar currículo\n    hideModalUpdate: function hideModalUpdate() {\n      this.$refs.modalUpdate.hide();\n    },\n    // Função que retorna o ano atual\n    currentYear: function currentYear() {\n      return new Date().getFullYear();\n    },\n    // Função para preencher o vetor de anos com\n    // os últimos 70 e próximos 15 valores, em \n    // relação ao ano atual\n    listYears: function listYears() {\n      var y = this.currentYear();\n      var yList = [];\n      var i = y - 70;\n\n      while (i++ < y + 15) {\n        yList.push(i);\n      }\n\n      return yList;\n    }\n  },\n  computed: {\n    // Função computada que altera o placeholder do input de habilities dependendo\n    // da quantidade de habilidades existentes, se chegar no limite o placeholder\n    // é alterado para vazio\n    placeHolderHabilities: function placeHolderHabilities() {\n      if (this.formCurriculum.habilities.length < 3) {\n        return 'Digite uma habilidade';\n      }\n\n      return '';\n    },\n    // Função computada que altera o placeholder do input de habilities dependendo\n    // da quantidade de habilidades existentes, se chegar no limite o placeholder\n    // é alterado para vazio\n    placeHolderHabilitiesUpdate: function placeHolderHabilitiesUpdate() {\n      if (this.formUpdate.habilities.length < 3) {\n        return 'Digite uma habilidade';\n      }\n\n      return '';\n    }\n  },\n  // Função para recuperar as informações do currículo no back-end\n  created: function created() {\n    var _this4 = this;\n\n    // O token  do usuário é recuperado e adicionado ao header da \n    // requisição para enviá-lo ao back-end\n    API.token = this.$store.getters.authToken; // Requisição POST para recuperar o currículo\n\n    API.get('/getCurriculum').then(function (response) {\n      // É necessário verificar se o currículo não foi excluído para a sua exibição,\n      // isso se dá analisando se o hash_file vindo do back é NULL,\n      if (response.data.data[\"hash_file\"]) {\n        _this4.curriculum = response.data.data;\n        _this4.alreadyAddCurriculum = true;\n        _this4.showCurriculum = true;\n      }\n    }).catch(function (error) {\n      _this4.error = error.message;\n    });\n  },\n  // Validações, para os forms existentes, feitas com o auxílio do Vuelidate\n  validations: {\n    // Validação do formulário de adição de currículo \n    formCurriculum: {\n      area: {\n        required: required\n      },\n      course: {\n        required: required,\n        minLength: minLength(4)\n      },\n      file: {\n        required: required\n      },\n      institute: {\n        required: required,\n        minLength: minLength(2)\n      },\n      graduateYear: {\n        required: required\n      },\n      habilities: {\n        required: required\n      }\n    },\n    formUpdate: {\n      file: {\n        required: required\n      },\n      habilities: {\n        required: required\n      }\n    }\n  }\n};",{"version":3,"sources":["PortalPessoa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <b-container>\n        \n        <!-- Seção contendo o campo de pesquisa e o botão de cadastro de currículo\n             (pesquisa direta não foi implementada ainda) -->\n        <section class=\"pt-2 pb-3\">\n            <b-container>\n                <b-card>\n                    <b-row>\n                        <b-col sm=\"1\">\n                            <icon name=\"search\"></icon>                                    \n                        </b-col>\n                        <b-col>\n                            <b-form-input type=\"search\" @keyup.enter=\"search\"\n                                placeholder=\"Pesquise algo...\"></b-form-input>\n                        </b-col>\n                    </b-row>\n                </b-card>                                                                           \n            </b-container>            \n        </section>\n\n        <!-- Seção de currículo -->\n        <section>\n            <div class=\"mt-3 mb-3\">                                    \n                <b-card>\n                    <b-container slot=\"header\">\n                        <b-row align-h=\"start\">\n                            <b-col>\n                                <h2 slot=\"header\">Meu currículo</h2>\n                            </b-col>\n\n                            <!-- Botão para abrir o modal de cadastro de currículo -->\n                            <b-button class=\"btn btn-sm bg-warning border-warning mr-3\"                                     \n                                @click=\"showModalCurriculum\"\n                                v-if=\"!alreadyAddCurriculum\"> \n                                <icon name=\"plus\"></icon>\n                            </b-button>                                           \n                        </b-row>\n                    </b-container>                                                \n                    \n                    <!-- Se exisitir, o currículo é apresentado junto com o carregamento da página -->\n                    <b-container class=\"align-items-center w-75\" v-if=\"showCurriculum\">\n                        <b-card> \n                            <!-- Body Currículo -->\n                            <!-- As manipulações dentro de cada 'li' são feitas para deixar a 1ª letra \n                                maiúscula em cada item-->\n                            <ul class=\"list-group list-group-flush\">\n                                <!-- Nome -->\n                                <li class=\"list-group-item header-gradient border-light\">\n                                    <Strong> {{ firstLetterUp(curriculum.name) }} </Strong>\n                                </li>\n                                <!-- Área -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Área: </Strong> {{ firstLetterUp(curriculum.area) }}\n                                </li>\n\n                                <!-- Instituição -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Instituição: </Strong> {{ firstLetterUp(curriculum.institute) }}\n                                </li>\n\n                                <!-- Curso -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Curso: </Strong> {{ firstLetterUp(curriculum.course) }}\n                                </li>\n\n                                <!-- Ano de formação -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Ano de formação: </Strong> {{ curriculum.graduate_year }}\n                                </li>\n\n                                <!-- Link para baixar currículo junto com a data da última atualização -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>\n                                        Arquivo de currículo:                                                     \n                                    </Strong> \n                                    <b-link :href=\"'http://localhost:3000/curriculos/' + curriculum.hash_file\">\n                                        Baixar\n                                    </b-link>\n                                    <br>\n                                    <small class=\"text-muted mr-2\">\n                                        Última atualização: {{ curriculum.reg_up }}\n                                    </small>  \n                                    <small>\n                                        <b-link @click=\"showModalUpdate\">\n                                            Atualizar arquivo\n                                        </b-link>\n                                    </small>\n\n                                </li>\n\n                                <!-- Habilidades -->\n                                <li class=\"list-group-item border-light\">\n                                    <Strong>Habilidades: </Strong>\n                                    <span class=\"tag-format pl-1 mr-2 text-dark\"\n                                        v-bind:key=\"hability.id\"\n                                        v-for=\"hability in curriculum.habilities\">                                            \n                                            {{ firstLetterUp(hability) }}\n                                    </span>\n                                </li>\n                            </ul>\n                            \n                            <!-- Footer currículo -->\n                            <div slot=\"footer\" v-if=\"alreadyAddCurriculum\">\n                                <b-row align-h=\"end\" class=\"mr-2\">\n                                    <!-- Botão para abrir o modal de confirmação de remoção do currículo -->\n                                    <b-button class=\"btn btn-sm btn-danger text-light\" @click=\"showModalRemove\"> \n                                        Excluir currículo\n                                    </b-button>\n                                </b-row>                            \n                            </div>\n                        </b-card>                             \n                    </b-container>                                                          \n                </b-card>                                  \n            </div> \n        </section>\n\n        <!-- Seção de exibição de resultados da pesquisa \n             (pesquisa direta não foi implementada ainda) -->\n        <section>\n                <b-container>\n                    <h1 v-if=\"ifResults\">\n                        Resultados\n                    </h1>\n                </b-container>\n        </section>\n        \n        <!-- Modal de cadastro de currículo (Precisa de validação)-->\n        <b-modal hide-footer\n            :centered=\"true\"\n            title=\"Cadastro de Currículo\"\n            size=\"lg\"\n            ref=\"modalRegCurriculum\">    \n                    \n            <!-- Modal body -->\n            <div class=\"modal-body\">\n                <!-- Formulário de currículo, contém: área, curso, arquivo, instituto, ano de formação, id de usuário e habilidades -->\n                <b-form id=\"curriculumForm\" @submit.prevent=\"redirectAddCurriculum\">\n                    <!-- Área -->\n                    <b-form-group\n                        label=\"Àrea *\"\n                        label-for=\"curriculumArea\">\n                        <b-form-select id=\"curriculumArea\" \n                            v-model=\"formCurriculum.area\" \n                            :state=\"!$v.formCurriculum.area.$invalid\" \n                            aria-describedby=\"inputCurriculumAreaFeedback\" required>                            \n                            <option value=\"null\" disabled> Escolha a área de atuação...</option>\n                            <option value=\"agricultura e veterinária\"> Agricultura e veterinária </option>\n                            <option value=\"ciências, matemática e computação\"> Ciências, matemática e computação </option>\n                            <option value=\"ciências sociais, negócios e direito\"> Ciências sociais, negócios e direito </option>\n                            <option value=\"educação\"> Educação </option>\n                            <option value=\"engenharia, produção e construção\"> Engenharia, produção e construção </option>\n                            <option value=\"humanidades e artes\"> Humanidades e artes </option>\n                            <option value=\"saúde e bem estar social\"> Saúde e bem estar social </option>\n                            <option value=\"serviços\"> Serviços </option>\n                        </b-form-select>\n                        <b-form-invalid-feedback id=\"inputCurriculumAreaFeedback\">\n                            <p v-if=\"!$v.formCurriculum.area.required\">\n                                Selecione uma opção.\n                            </p>                                      \n                        </b-form-invalid-feedback>\n                    </b-form-group>\n\n                    <!-- Curso -->\n                    <b-form-group\n                        label=\"Curso *\"\n                        label-for=\"curriculumCourse\">\n                        <b-form-input type=\"text\"\n                            id=\"curriculumCourse\"        \n                            v-model=\"formCurriculum.course\"\n                            :state=\"!$v.formCurriculum.course.$invalid\"                            \n                            aria-describedby=\"inputCurriculumCourseFeedback\"\n                            placeholder=\"Digite o curso de formação...\" required></b-form-input>\n                        <b-form-invalid-feedback id=\"inputCurriculumCourseFeedback\">\n                            <p v-if=\"!$v.formCurriculum.course.required\">\n                                Preencha este campo.\n                            </p>                                      \n                        </b-form-invalid-feedback>                        \n                    </b-form-group>\n\n                    <!-- Arquivo de currículo -->\n                    <!-- O <b-form-file> não suporta o <b-form-invalid-feedback> -->\n                    <b-form-group\n                        label=\"Arquivo *\"\n                        label-for=\"fileAdd\">\n                        <b-form-file id=\"fileAdd\"\n                            v-model=\"formCurriculum.file\" \n                            :state=\"!$v.formCurriculum.file.$invalid\"\n                            placeholder=\"Anexe um currículo...\" required></b-form-file>\n                        <div v-if=\"$v.formCurriculum.file.$invalid\" class=\"mt-3\">\n                            <p class=\"font-weight-bold text-danger\">\n                                Arquivo selecionado: Nenhum arquivo selecionado\n                            </p>\n                        </div>\n                        <div v-if=\"!$v.formCurriculum.file.$invalid\" class=\"mt-3\">\n                            <p class=\"font-weight-bold text-success\">\n                                Arquivo selecionado: {{formCurriculum.file && formCurriculum.file.name}}\n                            </p>\n                        </div>\n                    </b-form-group>\n\n                    <!-- Instituição de ensino -->\n                    <b-form-group\n                        label=\"Instituição de ensino *\"\n                        label-for=\"curriculumInstitute\">\n                        <b-form-input type=\"text\" \n                            id=\"curriculumInstitute\"        \n                            v-model=\"formCurriculum.institute\"\n                            :state=\"!$v.formCurriculum.institute.$invalid\"\n                            aria-describedby=\"inputCurriculumInstituteFeedback\"\n                            placeholder=\"Digite o instituto de formação...\" required></b-form-input>\n                        <b-form-invalid-feedback id=\"inputCurriculumInstituteFeedback\">\n                            <p v-if=\"!$v.formCurriculum.institute.required\">\n                                Preencha este campo.\n                            </p>                                      \n                        </b-form-invalid-feedback>   \n                    </b-form-group>\n\n\n                    <!-- Ano de formação -->\n                    <b-form-group\n                        label=\"Ano de formação *\"\n                        label-for=\"curriculumGradYear\">\n                        \n                        <b-form-select\n                            id=\"curriculumGradYear\"\n                            v-model=\"formCurriculum.graduateYear\"\n                            :options=\"yearList\" \n                            :state=\"!$v.formCurriculum.graduateYear.$invalid\" required\n                            aria-describedby=\"inputCurriculumGradYearFeedback\"></b-form-select>\n                        <b-form-invalid-feedback id=\"inputCurriculumGradYearFeedback\">\n                            <p v-if=\"!$v.formCurriculum.graduateYear.required\">\n                                Preencha este campo.\n                            </p>                                      \n                        </b-form-invalid-feedback>\n                    </b-form-group>\n\n                    <!-- Habilidades / Foi colocado um limite de 3 habilidades -->\n                    <b-form-group \n                        label=\"Principais habilidades *\"\n                        label-for=\"habilitiesTags\"\n                        description=\"Digite no máximo 3 habilidades\">\n                        <!-- O placeholder foi linkado com uma variável computada para que quando o usuário\n                        digitar o número limite de habilidades não apareça nada no placeholder -->\n                        <tags-input \n                            input-class=\"form-control-tags-input\"\n                            element-id=\"habilitiesTags\"\n                            v-model=\"formCurriculum.habilities\"\n                            :limit = 3\n                            :validate=\"validateHabilities\"\n                            :placeholder=\"placeHolderHabilities\"></tags-input> \n                    </b-form-group>\n\n                    <!-- Modal footer -->\n                    <div class=\"modal-footer\">\n                        <b-btn variant=\"outline-danger\" @click=\"hideModalCurriculum\">Fechar</b-btn>\n                        <b-btn :disabled=\"$v.formCurriculum.$invalid\" variant=\"outline-success\" type=\"submit\">Enviar</b-btn>\n                    </div>  \n                </b-form>\n            </div>\n        </b-modal>\n\n        <!-- Modal de confirmação de remoção -->\n        <b-modal hide-footer\n            :centered=\"true\"          \n            size=\"md\"\n            ref=\"modalRemove\">    \n            <h5 slot=\"modal-title\">\n                <Strong> Confirmação </Strong>\n            </h5>\n            <div class=\"modal-body\">\n                Deseja realmente excluir o currículo?             \n            </div>\n            <div class=\"modal-footer mt-2\">\n                <b-row align-h=\"end\">\n                    <b-btn variant=\"outline-dark mr-1\" @click=\"hideModalRemove\">Não</b-btn>\n                    <b-btn variant=\"outline-success mr-1\" @click=\"removeCurriculum\">Sim</b-btn>\n                </b-row>  \n            </div>\n            \n        </b-modal>\n\n        <!-- Modal de atualização do currículo (Precisa de validação)-->\n        <b-modal hide-footer\n            :centered=\"true\"        \n            size=\"md\"\n            ref=\"modalUpdate\">    \n            <h5 slot=\"modal-title\">\n                <Strong> Atualização de currículo </Strong>\n            </h5>\n            <!-- Modal body -->\n            <div class=\"modal-body\">\n                <!-- Formulário de atualização de currículo -->\n                <b-form id=\"curriculumUpdateForm\" @submit.prevent=\"redirectUpdate\">\n                    <!-- Arquivo de currículo -->\n                    <!-- O <b-form-file> não suporta o <b-form-invalid-feedback> -->\n                    <b-form-group\n                        label=\"Arquivo *\"\n                        label-for=\"fileUpdate\">\n                        <b-form-file id=\"fileUpdate\"\n                            v-model=\"formUpdate.file\"\n                            :state=\"!$v.formUpdate.file.$invalid\" \n                            placeholder=\"Anexe um currículo...\" required></b-form-file>\n                        <div v-if=\"$v.formUpdate.file.$invalid\" class=\"mt-3\">\n                            <p class=\"font-weight-bold text-danger\">\n                                Arquivo selecionado: Nenhum arquivo selecionado\n                            </p>\n                        </div>\n                        <div v-if=\"!$v.formUpdate.file.$invalid\" class=\"mt-3\">\n                            <p class=\"font-weight-bold text-success\">\n                                Arquivo selecionado: {{formUpdate.file && formUpdate.file.name}}\n                            </p>\n                        </div>\n                    </b-form-group>\n                    \n                    <!-- Habilidades / Foi colocado um limite de 3 habilidades -->\n                    <b-form-group description=\"Digite no máximo 3 habilidades\">\n                        <b-form-text for=\"habilitiesTagsUpdate\"> Principais habilidades </b-form-text>\n                        <tags-input input-class=\"form-control\"\n                            element-id=\"habilitiesTagsUpdate\"\n                            v-model=\"formUpdate.habilities\"\n                            :limit = 3\n                            :validate=\"validateHabilities\"\n                            :placeholder=\"placeHolderHabilitiesUpdate\"></tags-input>\n                    </b-form-group>\n\n                    <!-- Modal footer -->\n                    <div class=\"modal-footer mt-2\">\n                        <b-row align-h=\"end\">\n                            <b-btn variant=\"outline-danger mr-1\" @click=\"hideModalUpdate\">Cancelar</b-btn>\n                            <b-btn :disabled=\"$v.formUpdate.$invalid\" variant=\"outline-success\" type=\"submit\">Atualizar</b-btn>\n                        </b-row>\n                    </div>  \n                </b-form>\n            </div>\n        </b-modal>\n    </b-container>\n</template>\n\n<script>\n    // O comentário na linha de baixo desabilita os warnings\n/* eslint-disable */\n\n// Imports necessários para fazer a requisição ao servidor\nimport API from '../../services/ApiService';\n\n// Import das funções utilizadas do Vuelidate\nimport {    required, \n            minLength, \n            between, \n            maxLength, \n            email, \n            numeric } from 'vuelidate/lib/validators'\n\nexport default {\n    name: \"portalPessoa\",\n    data() {\n        return {\n            // Variável para controlar a exibição do modal\n            modalRegCurriculum: false,\n\n            // Todas as variáveis relacionadas à adição de currículo\n            // ficam no objeto formCurriculum\n            // para a validação adequada das informações do\n            // currículo, e apenas com tudo certo é possível \n            // fazer o envio\n            formCurriculum: {\n                area: null,\n                course: '',\n                file: '',\n                institute: '',\n                graduateYear: this.currentYear(),\n                habilities: [\n                    'smart grid'\n                ], \n            },\n            \n            // Todas as variáveis relacionadas à atualização de currículo\n            // ficam no objeto formUpdate\n            // para a validação adequada das informações do\n            // currículo, e apenas com tudo certo é possível \n            // fazer o envio\n            formUpdate: {\n                file: '',\n                habilities: [\n                    'smart grid'\n                ],\n            },                        \n\n            // Variável que recebe o erro do back caso\n            // haja algum erro na adição do currículo\n            error: null,\n\n            // Variável que controla a exibição da \n            // div de resultados da busca\n            ifResults: false,\n            \n            // Variável que recebe os resultados \n            // da pesquisa\n            results: null,\n\n            // Variável para exibir o botão de adição de currículo\n            alreadyAddCurriculum: false,\n\n            // Variável para exibir o currículo do usuário\n            showCurriculum: false,\n\n            // Variável para receber e exibir as informações do currículo\n            curriculum: null,\n\n            // Variável para controlar a exibição do modal de confirmação de remoção do currículo\n            modalRemove: false,\n\n            // Variável para controlar a exibição do modal de atualização do currículo\n            modalUpdate: false,\n\n            // Variável contendo todos os anos possíveis para o ano de formação\n            yearList: this.listYears(),\n\n            // Método para tornar a primeira letra maiúscula da palavra fornecida\n            firstLetterUp (word) {\n                return word[0].toUpperCase() + word.slice(1);\n            },\n        }\n    },\n    methods: {\n        // Método para intermediar a adição de currículo\n        redirectAddCurriculum($event) {        \n            this.addCurriculum();\n\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para intermediar a atualização de currículo\n        redirectUpdate($event) { \n            this.updateCurriculum();\n\n            // Previne o recarregamento da página (ou seja, que o evento de submit aconteça)\n            $event.preventDefault();\n        },\n\n        // Método para validar as habilidades (Falta implementar)\n        validateHabilities ($event) {\n            return true;\n        },\n\n        // Método para adicionar um currículo\n        addCurriculum() {\n            // O token  do usuário é recuperado e adicionado ao header da \n            // requisição para enviá-lo ao back-end\n            API.token = this.$store.getters.authToken;\n\n            // O objeto formData é instaciado apenas dentro do trecho de código ao\n            // qual ele pertence, através da instrução let\n            let formData = new FormData();\n\n            formData.append('area', this.formCurriculum.area);\n            formData.append('course', this.formCurriculum.course);\n            formData.append('file', this.formCurriculum.file);\n            formData.append('institute', this.formCurriculum.institute);\n            formData.append('graduate_year', this.formCurriculum.graduateYear);\n            for (var i = 0; i < this.formCurriculum.habilities.length; i++) {\n                formData.append('habilities[]', this.formCurriculum.habilities[i]);\n            }\n            \n            // Requisição POST para adicionar as informações do currículo\n            // e o arquivo de currículo\n            API.postFile('/addCurriculum', formData).then(() => {                \n                // Recarrega a página\n                this.$router.go();\n            });\n        },\n\n        // Método para remover currículo\n        removeCurriculum () {\n            // O token  do usuário é recuperado e adicionado ao header da \n            // requisição para enviá-lo ao back-end\n            API.token = this.$store.getters.authToken;\n            \n            // Requisição DELETE para remover o currículo            \n            API.delete('/removeCurriculum').then(() => {\n                this.hideModalRemove();\n                this.alreadyAddCurriculum = false;\n                this.showCurriculum = false;                \n            });\n        },\n\n        // Método para atualizar currículo\n        updateCurriculum () {\n            // O token  do usuário é recuperado e adicionado ao header da \n            // requisição para enviá-lo ao back-end\n            API.token = this.$store.getters.authToken;\n\n            // O objeto formData é instaciado apenas dentro do trecho de código ao\n            // qual ele pertence, através da instrução let\n            let formData = new FormData();\n            \n            formData.append('file', this.formUpdate.file);\n            for (var i = 0; i < this.formUpdate.habilities.length; i++) {\n                formData.append('habilities[]', thisthis.formUpdate.habilities[i]);\n            }\n            \n            // Requisição POST para adicionar as informações do currículo\n            // e o arquivo de currículo\n            API.postFile('/updateCurriculum', formData).then(() => {                                \n                // Recarrega a página\n                this.$router.go();\n            });\n        },\n\n        // Método que mostra o modal para adicionar currículos\n        showModalCurriculum () {\n            this.$refs.modalRegCurriculum.show()\n        },\n\n        // Método para esconder o modal de adicionar currículos\n        hideModalCurriculum () {\n            this.$refs.modalRegCurriculum.hide()\n        },\n\n        // Método que mostra o modal para confirmar a remoção do currículo\n        showModalRemove () {\n            this.$refs.modalRemove.show()\n        },\n\n        // Método para esconder o modal para confirmar a remoção do currículo\n        hideModalRemove () {\n            this.$refs.modalRemove.hide()\n        },\n\n        // Método que mostra o modal para atulizar currículo\n        showModalUpdate () {\n            this.$refs.modalUpdate.show()\n        },\n\n        // Método para esconder o modal de atualizar currículo\n        hideModalUpdate () {\n            this.$refs.modalUpdate.hide()\n        },     \n        \n        // Função que retorna o ano atual\n        currentYear() {\n            return (new Date()).getFullYear();\n        },\n\n        // Função para preencher o vetor de anos com\n        // os últimos 70 e próximos 15 valores, em \n        // relação ao ano atual\n        listYears() {\n            var y = this.currentYear();\n            var yList = [];\n            var i = y - 70;\n            while (i++ < y + 15) {\n                yList.push(i);\n            }\n            return yList;\n        }\n    },\n    computed: {        \n        // Função computada que altera o placeholder do input de habilities dependendo\n        // da quantidade de habilidades existentes, se chegar no limite o placeholder\n        // é alterado para vazio\n        placeHolderHabilities() {\n            if (this.formCurriculum.habilities.length < 3) {\n                return 'Digite uma habilidade';\n            } \n            return '';\n        }, \n\n        // Função computada que altera o placeholder do input de habilities dependendo\n        // da quantidade de habilidades existentes, se chegar no limite o placeholder\n        // é alterado para vazio\n        placeHolderHabilitiesUpdate() {\n            if (this.formUpdate.habilities.length < 3) {\n                return 'Digite uma habilidade';\n            } \n            return '';\n        }, \n    },\n\n    // Função para recuperar as informações do currículo no back-end\n    created: function () {\n        // O token  do usuário é recuperado e adicionado ao header da \n        // requisição para enviá-lo ao back-end\n        API.token = this.$store.getters.authToken;\n        \n        // Requisição POST para recuperar o currículo\n        API.get('/getCurriculum')\n        .then(response => {                        \n            // É necessário verificar se o currículo não foi excluído para a sua exibição,\n            // isso se dá analisando se o hash_file vindo do back é NULL,\n            if(response.data.data[\"hash_file\"]) {\n                this.curriculum = response.data.data;\n                this.alreadyAddCurriculum = true;\n                this.showCurriculum = true;\n            }\n        }).catch(error => {\n            this.error = error.message;\n        });\n    },\n\n    // Validações, para os forms existentes, feitas com o auxílio do Vuelidate\n    validations: {\n        // Validação do formulário de adição de currículo \n        formCurriculum: {\n            area: {\n                required,\n            },\n            course: {\n                required,\n                minLength: minLength(4),\n            },\n            file: {\n                required,\n            },\n            institute: {\n                required,\n                minLength: minLength(2),\n            },\n            graduateYear: {\n                required,\n            },\n            habilities: {\n                required,    \n            },\n        },\n        formUpdate: {\n            file: {\n                required,\n            },\n            habilities: {\n                required,\n            },\n        },\n    },\n};\n</script>\n\n<style>\n\n.header-gradient {\n    border-radius: 4px;\n    background: linear-gradient(to right, #a3abb3 20%, #ffffff  80%);\n}\n\n.tag-format {\n    display: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 500;\n    line-height: 0.5;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    padding: .4rem .25rem;\n    background: #fff;\n    border: 1px solid transparent;\n    background: #a3abb3;\n    border-radius: .25rem;\n    border-color: #dbdbdb;\n}\n\n.tags-input span {\n    color: #ffffff;\n    background-color: #ffc107;\n}\n\n.tags-input-remove:before, .tags-input-remove:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    background: #000000;\n    height: 2px;\n    margin-top: -1px;\n}\n\n.form-control-tags-input {\n    display: block;\n    width: auto;\n    height: auto;\n    min-width: 100%;\n    min-height: calc(2.25rem + 5px);\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n</style>\n"],"sourceRoot":"src/components/pages"}]}